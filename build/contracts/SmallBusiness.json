{
  "contractName": "SmallBusiness",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        }
      ],
      "name": "PostProject",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "chooseTheProject",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "logAddCustomer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "logAddEngineers",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Engineers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "engineerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "enum SmallBusiness.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "customers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "customerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "deal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "day",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "moreInform",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "enum SmallBusiness.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "averageOfprice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "customerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "yourName",
          "type": "string"
        }
      ],
      "name": "addCustomer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_engineerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_yourName",
          "type": "string"
        }
      ],
      "name": "addEngineer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "averageOfprice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "addProject",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "day",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        }
      ],
      "name": "chooseToWork",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_engineerAddress",
          "type": "address"
        }
      ],
      "name": "accepteCustomer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_averageOfprice",
          "type": "uint256"
        }
      ],
      "name": "EditProject",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        }
      ],
      "name": "getProject",
      "outputs": [
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "averageOfprice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        }
      ],
      "name": "deleteProject",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_passthevalue",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"PostProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"chooseTheProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"logAddCustomer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"logAddEngineers\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_averageOfprice\",\"type\":\"uint256\"}],\"name\":\"EditProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Engineers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"engineerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"enum SmallBusiness.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_passthevalue\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_engineerAddress\",\"type\":\"address\"}],\"name\":\"accepteCustomer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"yourName\",\"type\":\"string\"}],\"name\":\"addCustomer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_engineerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_yourName\",\"type\":\"string\"}],\"name\":\"addEngineer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"averageOfprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"addProject\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"}],\"name\":\"chooseToWork\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"deleteProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"getProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"averageOfprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"moreInform\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"enum SmallBusiness.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"averageOfprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PostProject(address)\":{\"params\":{\"_customerAddress\":\"is the address of Project\"}},\"chooseTheProject(address,uint256)\":{\"params\":{\"_customerAddress\":\"is the address of Project\",\"price\":\"is the price that customer send to Engineer\"}},\"logAddCustomer(address)\":{\"params\":{\"_address\":\"Engineer address\"}},\"logAddEngineers(address)\":{\"params\":{\"_address\":\"customer address\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"PostProject(address)\":{\"notice\":\"Emitted when a Project is posted \"},\"chooseTheProject(address,uint256)\":{\"notice\":\"Emitted when Engineer add a price for working on project \"},\"logAddCustomer(address)\":{\"notice\":\"Emitted when a Engineer is registred \"},\"logAddEngineers(address)\":{\"notice\":\"Emitted when a customer is registred \"}},\"kind\":\"user\",\"methods\":{\"accepteCustomer(address)\":{\"notice\":\"Allows a customer for view the price of the project that engineer add it and payed that price.\"},\"addCustomer(address,string)\":{\"notice\":\"Allows to add a new customer in the network.\"},\"addEngineer(address,string)\":{\"notice\":\"Allows to add a new engineer in the network.\"},\"addProject(string,string,string,uint256,uint256)\":{\"notice\":\"add Project`s id in to mapping check the state of project should be forSell check the modifier is customer to call that function  the customer should call that function\"},\"deleteProject(address)\":{\"notice\":\"Allows the customer for delete the project\"},\"getProject(address)\":{\"notice\":\"Allows a Engineer and customer and users for view the project.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol\":\"SmallBusiness\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/sodaba ulomi/Desktop/wslapp/contracts/InterfaceOfCuntract.sol\":{\"keccak256\":\"0x28a19248dfaa9d63541c3e8dbfe79e889a8a63a069a1cac82282007247acf452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b04b93c6d66de6957094e442077f38c7d8619e67720ba26563e00155e43dff06\",\"dweb:/ipfs/QmW4KSn13zWAuL7DBPP9VHokoxBQFEDF1iCs7Z4KNuE5sT\"]},\"/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol\":{\"keccak256\":\"0x8ab5a326ab4f254a2b0970c982a2a7b0ed98744a989a613ae28e31b592fc8c24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d48e345d57436d20377a4a80f1271778120aae61f3c00b48b3f7211d75380c9f\",\"dweb:/ipfs/QmbwZ6xnPXJFs7VBm7RYA5hE3R6cFdsyCuv8svw694MhkC\"]}},\"version\":1}",
  "bytecode": "0x6080604052600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b357600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600181905550613a228061010b6000396000f3fe6080604052600436106100f35760003560e01c8063840e78fd1161008a578063aede609811610059578063aede609814610abb578063cea1a67a14610d34578063d026c42514610dc4578063f987070514610fd7576100f3565b8063840e78fd1461069f57806388bc81501461087e5780638da5cb5b1461097c578063a871ca5d146109bd576100f3565b80633d8f426d116100c65780633d8f426d146103cd578063413bf38f14610427578063553df021146104ff57806378e4f9341461052a576100f3565b806303bc470d146100f857806312065fe0146101f15780632200e21e1461021c578063336989ae146102e6575b600080fd5b34801561010457600080fd5b506101476004803603602081101561011b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611187565b604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018060200183600381111561017757fe5b8152602001828103825284818151815260200191508051906020019080838360005b838110156101b4578082015181840152602081019050610199565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156101fd57600080fd5b50610206611276565b6040518082815260200191505060405180910390f35b34801561022857600080fd5b5061026b6004803603602081101561023f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061127e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ab578082015181840152602081019050610290565b50505050905090810190601f1680156102d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102f257600080fd5b506103356004803603602081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061153e565b604051808373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610391578082015181840152602081019050610376565b50505050905090810190601f1680156103be5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61040f600480360360208110156103e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061161a565b60405180821515815260200191505060405180910390f35b34801561043357600080fd5b506104766004803603602081101561044a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c83565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104c25780820151818401526020810190506104a7565b50505050905090810190601f1680156104ef5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561050b57600080fd5b50610514611d45565b6040518082815260200191505060405180910390f35b34801561053657600080fd5b506106246004803603608081101561054d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561059e57600080fd5b8201836020820111156105b057600080fd5b803590602001918460018302840111640100000000831117156105d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d4b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610664578082015181840152602081019050610649565b50505050905090810190601f1680156106915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106ab57600080fd5b506106ee600480360360208110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061229b565b604051808873ffffffffffffffffffffffffffffffffffffffff1681526020018060200187600381111561071e57fe5b8152602001806020018060200186815260200185815260200184810384528a818151815260200191508051906020019080838360005b8381101561076f578082015181840152602081019050610754565b50505050905090810190601f16801561079c5780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b838110156107d55780820151818401526020810190506107ba565b50505050905090810190601f1680156108025780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b8381101561083b578082015181840152602081019050610820565b50505050905090810190601f1680156108685780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561088a57600080fd5b50610964600480360360408110156108a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156108de57600080fd5b8201836020820111156108f057600080fd5b8035906020019184600183028401116401000000008311171561091257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124d2565b60405180821515815260200191505060405180910390f35b34801561098857600080fd5b506109916126ed565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109c957600080fd5b50610aa3600480360360408110156109e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610a1d57600080fd5b820183602082011115610a2f57600080fd5b80359060200191846001830284011164010000000083111715610a5157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612711565b60405180821515815260200191505060405180910390f35b348015610ac757600080fd5b50610cb960048036036080811015610ade57600080fd5b8101908080359060200190640100000000811115610afb57600080fd5b820183602082011115610b0d57600080fd5b80359060200191846001830284011164010000000083111715610b2f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b9257600080fd5b820183602082011115610ba457600080fd5b80359060200191846001830284011164010000000083111715610bc657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c2957600080fd5b820183602082011115610c3b57600080fd5b80359060200191846001830284011164010000000083111715610c5d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612984565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cf9578082015181840152602081019050610cde565b50505050905090810190601f168015610d265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d4057600080fd5b50610d49612f3c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d89578082015181840152602081019050610d6e565b50505050905090810190601f168015610db65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610fbf600480360360a0811015610dda57600080fd5b8101908080359060200190640100000000811115610df757600080fd5b820183602082011115610e0957600080fd5b80359060200191846001830284011164010000000083111715610e2b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e8e57600080fd5b820183602082011115610ea057600080fd5b80359060200191846001830284011164010000000083111715610ec257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f2557600080fd5b820183602082011115610f3757600080fd5b80359060200191846001830284011164010000000083111715610f5957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919050505061310f565b60405180821515815260200191505060405180910390f35b348015610fe357600080fd5b5061102660048036036020811015610ffa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061347f565b60405180806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b8381101561107a57808201518184015260208101905061105f565b50505050905090810190601f1680156110a75780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b838110156110e05780820151818401526020810190506110c5565b50505050905090810190601f16801561110d5780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b8381101561114657808201518184015260208101905061112b565b50505050905090810190601f1680156111735780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112595780601f1061122e57610100808354040283529160200191611259565b820191906000526020600020905b81548152906001019060200180831161123c57829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600047905090565b6060338073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f74686973206163636f756e74206973206e6f7420437573746f6d65722e00000081525060200191505060405180910390fd5b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160010190805190602001906114589291906138e4565b506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160030190805190602001906114a69291906138e4565b506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160040190805190602001906114f49291906138e4565b50600081600501819055506040518060400160405280601681526020017f7468652070726f6a656374207761732064656c6574650000000000000000000081525092505050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116105780601f106115e557610100808354040283529160200191611610565b820191906000526020600020905b8154815290600101906020018083116115f357829003601f168201915b5050505050905082565b6000338073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f74686973206163636f756e74206973206e6f7420437573746f6d65722e00000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b6000600381111561183357fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561188e57fe5b14611901576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f74686973206163636f756e74206973206e6f7420616e20656e67696e6565720081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f7468697320637573746f6d6572206973206e6f742045786973742e000000000081525060200191505060405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160020160006101000a81548160ff02191690836003811115611b6b57fe5b02179055506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400008560000154029081150290604051600060405180830381858888f19350505050158015611c73573d6000803e3d6000fd5b5060019650505050505050919050565b6003602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d3b5780601f10611d1057610100808354040283529160200191611d3b565b820191906000526020600020905b815481529060010190602001808311611d1e57829003601f168201915b5050505050905083565b60015481565b6060338073ffffffffffffffffffffffffffffffffffffffff16600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e51576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f63616c6c65722069736e6f7420456e67696e656572000000000000000000000081525060200191505060405180910390fd5b85600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b60006003811115611f6457fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166003811115611fbf57fe5b14612032576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6002600381111561203f57fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561209a57fe5b1461210d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f74686973206163636f756e7420616c7265616479207365742076616c7565000081525060200191505060405180910390fd5b604051806060016040528086815260200187815260200185815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020190805190602001906121979291906138e4565b509050506003808111156121a757fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561220257fe5b50507f140ba8a8a70ea6896f415e662fe4a3493133537db4dcd56586070e42253d9b433386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16040518060400160405280601481526020017f7365742076616c7565206f6e2070726f6a65637400000000000000000000000081525092505050949350505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561236d5780601f106123425761010080835404028352916020019161236d565b820191906000526020600020905b81548152906001019060200180831161235057829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561241e5780601f106123f35761010080835404028352916020019161241e565b820191906000526020600020905b81548152906001019060200180831161240157829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124bc5780601f10612491576101008083540402835291602001916124bc565b820191906000526020600020905b81548152906001019060200180831161249f57829003601f168201915b5050505050908060050154908060060154905087565b60008073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146125ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806139cc6021913960400191505060405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906126879291906138e4565b509050507f67db2594560e9767e8eec7f82a7ee7777909a9c55f1dc6ba490d7ef45ffcecfd83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160018054016001819055506001905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f74686973206164647265737320616c7265616479207265676973747265642e0081525060200191505060405180910390fd5b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016002600381111561285057fe5b815250600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906128f59291906138e4565b5060408201518160020160006101000a81548160ff0219169083600381111561291a57fe5b02179055509050507f9cd3b8c22eaf60823d8598cfb11eba80932bdb7e58442e690e6368677ac8159383604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160018054016001819055506001905092915050565b6060338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146129bf57600080fd5b33600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612ac5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b60006003811115612ad257fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166003811115612b2d57fe5b14612ba0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cdb5780601f10612cb057610100808354040283529160200191612cdb565b820191906000526020600020905b815481529060010190602001808311612cbe57829003601f168201915b505050505081526020016002820160009054906101000a900460ff166003811115612d0257fe5b6003811115612d0d57fe5b8152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612daa5780601f10612d7f57610100808354040283529160200191612daa565b820191906000526020600020905b815481529060010190602001808311612d8d57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e4c5780601f10612e2157610100808354040283529160200191612e4c565b820191906000526020600020905b815481529060010190602001808311612e2f57829003601f168201915b5050505050815260200160058201548152602001600682015481525050905033816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050878160200181905250600081604001906003811115612ebe57fe5b90816003811115612ecb57fe5b81525050868160600181905250858160800181905250848160a00181815250508060c001518160c00181815250506040518060400160405280601681526020017f7468652070726f6a6563742077617320757064617465000000000000000000008152509350505050949350505050565b60606000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060016003811115612f8e57fe5b8160020160009054906101000a900460ff166003811115612fab57fe5b1461301e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f746869732070726f6a65637420776173206e6f742066696e697368000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060004790508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156130d0573d6000803e3d6000fd5b506040518060400160405280601381526020017f7468652076616c75652069732072657475726e00000000000000000000000000815250935050505090565b6000338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461314a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461324e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f746869732070726f6a65637420616c72656164792069732065786973742e000081525060200191505060405180910390fd5b833410156132a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180613990603c913960400191505060405180910390fd5b6040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001600060038111156132e157fe5b815260200187815260200186815260200185815260200184815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061339e9291906138e4565b5060408201518160020160006101000a81548160ff021916908360038111156133c357fe5b021790555060608201518160030190805190602001906133e49291906138e4565b5060808201518160040190805190602001906134019291906138e4565b5060a0820151816005015560c0820151816006015590505060018054016001819055507fc90a5997158125d11f471581d0f9c698a86d5f9b21d81eccee8f78d4d37327c133604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600191505095945050505050565b6060806060600080338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146134c057600080fd5b86600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156135c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b600060038111156135d357fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561362e57fe5b146136a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101816003018260040183600501548460060154848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561378f5780601f106137645761010080835404028352916020019161378f565b820191906000526020600020905b81548152906001019060200180831161377257829003601f168201915b50505050509450838054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561382b5780601f106138005761010080835404028352916020019161382b565b820191906000526020600020905b81548152906001019060200180831161380e57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138c75780601f1061389c576101008083540402835291602001916138c7565b820191906000526020600020905b8154815290600101906020018083116138aa57829003601f168201915b505050505092509750975097509750975050505091939590929450565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261391a5760008555613961565b82601f1061393357805160ff1916838001178555613961565b82800160010185558215613961579182015b82811115613960578251825591602001919060010190613945565b5b50905061396e9190613972565b5090565b5b8082111561398b576000816000905550600101613973565b509056fe7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e74686973206164647265737320697320616c726561647920726567697374726564a264697066735822122090c0c741266c2fa9bc5bed57a031d1b753ef4e89667677fa9afadfe85abbbfc764736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063840e78fd1161008a578063aede609811610059578063aede609814610abb578063cea1a67a14610d34578063d026c42514610dc4578063f987070514610fd7576100f3565b8063840e78fd1461069f57806388bc81501461087e5780638da5cb5b1461097c578063a871ca5d146109bd576100f3565b80633d8f426d116100c65780633d8f426d146103cd578063413bf38f14610427578063553df021146104ff57806378e4f9341461052a576100f3565b806303bc470d146100f857806312065fe0146101f15780632200e21e1461021c578063336989ae146102e6575b600080fd5b34801561010457600080fd5b506101476004803603602081101561011b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611187565b604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018060200183600381111561017757fe5b8152602001828103825284818151815260200191508051906020019080838360005b838110156101b4578082015181840152602081019050610199565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156101fd57600080fd5b50610206611276565b6040518082815260200191505060405180910390f35b34801561022857600080fd5b5061026b6004803603602081101561023f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061127e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ab578082015181840152602081019050610290565b50505050905090810190601f1680156102d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102f257600080fd5b506103356004803603602081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061153e565b604051808373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610391578082015181840152602081019050610376565b50505050905090810190601f1680156103be5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61040f600480360360208110156103e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061161a565b60405180821515815260200191505060405180910390f35b34801561043357600080fd5b506104766004803603602081101561044a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c83565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104c25780820151818401526020810190506104a7565b50505050905090810190601f1680156104ef5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561050b57600080fd5b50610514611d45565b6040518082815260200191505060405180910390f35b34801561053657600080fd5b506106246004803603608081101561054d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561059e57600080fd5b8201836020820111156105b057600080fd5b803590602001918460018302840111640100000000831117156105d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d4b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610664578082015181840152602081019050610649565b50505050905090810190601f1680156106915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106ab57600080fd5b506106ee600480360360208110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061229b565b604051808873ffffffffffffffffffffffffffffffffffffffff1681526020018060200187600381111561071e57fe5b8152602001806020018060200186815260200185815260200184810384528a818151815260200191508051906020019080838360005b8381101561076f578082015181840152602081019050610754565b50505050905090810190601f16801561079c5780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b838110156107d55780820151818401526020810190506107ba565b50505050905090810190601f1680156108025780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b8381101561083b578082015181840152602081019050610820565b50505050905090810190601f1680156108685780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561088a57600080fd5b50610964600480360360408110156108a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156108de57600080fd5b8201836020820111156108f057600080fd5b8035906020019184600183028401116401000000008311171561091257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124d2565b60405180821515815260200191505060405180910390f35b34801561098857600080fd5b506109916126ed565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109c957600080fd5b50610aa3600480360360408110156109e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610a1d57600080fd5b820183602082011115610a2f57600080fd5b80359060200191846001830284011164010000000083111715610a5157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612711565b60405180821515815260200191505060405180910390f35b348015610ac757600080fd5b50610cb960048036036080811015610ade57600080fd5b8101908080359060200190640100000000811115610afb57600080fd5b820183602082011115610b0d57600080fd5b80359060200191846001830284011164010000000083111715610b2f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b9257600080fd5b820183602082011115610ba457600080fd5b80359060200191846001830284011164010000000083111715610bc657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c2957600080fd5b820183602082011115610c3b57600080fd5b80359060200191846001830284011164010000000083111715610c5d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612984565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cf9578082015181840152602081019050610cde565b50505050905090810190601f168015610d265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d4057600080fd5b50610d49612f3c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d89578082015181840152602081019050610d6e565b50505050905090810190601f168015610db65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610fbf600480360360a0811015610dda57600080fd5b8101908080359060200190640100000000811115610df757600080fd5b820183602082011115610e0957600080fd5b80359060200191846001830284011164010000000083111715610e2b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e8e57600080fd5b820183602082011115610ea057600080fd5b80359060200191846001830284011164010000000083111715610ec257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f2557600080fd5b820183602082011115610f3757600080fd5b80359060200191846001830284011164010000000083111715610f5957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919050505061310f565b60405180821515815260200191505060405180910390f35b348015610fe357600080fd5b5061102660048036036020811015610ffa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061347f565b60405180806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b8381101561107a57808201518184015260208101905061105f565b50505050905090810190601f1680156110a75780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b838110156110e05780820151818401526020810190506110c5565b50505050905090810190601f16801561110d5780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b8381101561114657808201518184015260208101905061112b565b50505050905090810190601f1680156111735780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112595780601f1061122e57610100808354040283529160200191611259565b820191906000526020600020905b81548152906001019060200180831161123c57829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600047905090565b6060338073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f74686973206163636f756e74206973206e6f7420437573746f6d65722e00000081525060200191505060405180910390fd5b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160010190805190602001906114589291906138e4565b506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160030190805190602001906114a69291906138e4565b506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160040190805190602001906114f49291906138e4565b50600081600501819055506040518060400160405280601681526020017f7468652070726f6a656374207761732064656c6574650000000000000000000081525092505050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116105780601f106115e557610100808354040283529160200191611610565b820191906000526020600020905b8154815290600101906020018083116115f357829003601f168201915b5050505050905082565b6000338073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f74686973206163636f756e74206973206e6f7420437573746f6d65722e00000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b6000600381111561183357fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561188e57fe5b14611901576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f74686973206163636f756e74206973206e6f7420616e20656e67696e6565720081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f7468697320637573746f6d6572206973206e6f742045786973742e000000000081525060200191505060405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160020160006101000a81548160ff02191690836003811115611b6b57fe5b02179055506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400008560000154029081150290604051600060405180830381858888f19350505050158015611c73573d6000803e3d6000fd5b5060019650505050505050919050565b6003602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d3b5780601f10611d1057610100808354040283529160200191611d3b565b820191906000526020600020905b815481529060010190602001808311611d1e57829003601f168201915b5050505050905083565b60015481565b6060338073ffffffffffffffffffffffffffffffffffffffff16600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e51576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f63616c6c65722069736e6f7420456e67696e656572000000000000000000000081525060200191505060405180910390fd5b85600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b60006003811115611f6457fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166003811115611fbf57fe5b14612032576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6002600381111561203f57fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561209a57fe5b1461210d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f74686973206163636f756e7420616c7265616479207365742076616c7565000081525060200191505060405180910390fd5b604051806060016040528086815260200187815260200185815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020190805190602001906121979291906138e4565b509050506003808111156121a757fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561220257fe5b50507f140ba8a8a70ea6896f415e662fe4a3493133537db4dcd56586070e42253d9b433386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16040518060400160405280601481526020017f7365742076616c7565206f6e2070726f6a65637400000000000000000000000081525092505050949350505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561236d5780601f106123425761010080835404028352916020019161236d565b820191906000526020600020905b81548152906001019060200180831161235057829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561241e5780601f106123f35761010080835404028352916020019161241e565b820191906000526020600020905b81548152906001019060200180831161240157829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124bc5780601f10612491576101008083540402835291602001916124bc565b820191906000526020600020905b81548152906001019060200180831161249f57829003601f168201915b5050505050908060050154908060060154905087565b60008073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146125ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806139cc6021913960400191505060405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906126879291906138e4565b509050507f67db2594560e9767e8eec7f82a7ee7777909a9c55f1dc6ba490d7ef45ffcecfd83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160018054016001819055506001905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f74686973206164647265737320616c7265616479207265676973747265642e0081525060200191505060405180910390fd5b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016002600381111561285057fe5b815250600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906128f59291906138e4565b5060408201518160020160006101000a81548160ff0219169083600381111561291a57fe5b02179055509050507f9cd3b8c22eaf60823d8598cfb11eba80932bdb7e58442e690e6368677ac8159383604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160018054016001819055506001905092915050565b6060338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146129bf57600080fd5b33600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612ac5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b60006003811115612ad257fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166003811115612b2d57fe5b14612ba0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cdb5780601f10612cb057610100808354040283529160200191612cdb565b820191906000526020600020905b815481529060010190602001808311612cbe57829003601f168201915b505050505081526020016002820160009054906101000a900460ff166003811115612d0257fe5b6003811115612d0d57fe5b8152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612daa5780601f10612d7f57610100808354040283529160200191612daa565b820191906000526020600020905b815481529060010190602001808311612d8d57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e4c5780601f10612e2157610100808354040283529160200191612e4c565b820191906000526020600020905b815481529060010190602001808311612e2f57829003601f168201915b5050505050815260200160058201548152602001600682015481525050905033816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050878160200181905250600081604001906003811115612ebe57fe5b90816003811115612ecb57fe5b81525050868160600181905250858160800181905250848160a00181815250508060c001518160c00181815250506040518060400160405280601681526020017f7468652070726f6a6563742077617320757064617465000000000000000000008152509350505050949350505050565b60606000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060016003811115612f8e57fe5b8160020160009054906101000a900460ff166003811115612fab57fe5b1461301e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f746869732070726f6a65637420776173206e6f742066696e697368000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060004790508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156130d0573d6000803e3d6000fd5b506040518060400160405280601381526020017f7468652076616c75652069732072657475726e00000000000000000000000000815250935050505090565b6000338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461314a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461324e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f746869732070726f6a65637420616c72656164792069732065786973742e000081525060200191505060405180910390fd5b833410156132a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180613990603c913960400191505060405180910390fd5b6040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001600060038111156132e157fe5b815260200187815260200186815260200185815260200184815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061339e9291906138e4565b5060408201518160020160006101000a81548160ff021916908360038111156133c357fe5b021790555060608201518160030190805190602001906133e49291906138e4565b5060808201518160040190805190602001906134019291906138e4565b5060a0820151816005015560c0820151816006015590505060018054016001819055507fc90a5997158125d11f471581d0f9c698a86d5f9b21d81eccee8f78d4d37327c133604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600191505095945050505050565b6060806060600080338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146134c057600080fd5b86600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156135c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b600060038111156135d357fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561362e57fe5b146136a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101816003018260040183600501548460060154848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561378f5780601f106137645761010080835404028352916020019161378f565b820191906000526020600020905b81548152906001019060200180831161377257829003601f168201915b50505050509450838054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561382b5780601f106138005761010080835404028352916020019161382b565b820191906000526020600020905b81548152906001019060200180831161380e57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138c75780601f1061389c576101008083540402835291602001916138c7565b820191906000526020600020905b8154815290600101906020018083116138aa57829003601f168201915b505050505092509750975097509750975050505091939590929450565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261391a5760008555613961565b82601f1061393357805160ff1916838001178555613961565b82800160010185558215613961579182015b82811115613960578251825591602001919060010190613945565b5b50905061396e9190613972565b5090565b5b8082111561398b576000816000905550600101613973565b509056fe7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e74686973206164647265737320697320616c726561647920726567697374726564a264697066735822122090c0c741266c2fa9bc5bed57a031d1b753ef4e89667677fa9afadfe85abbbfc764736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "737:9152:2:-:0;;;872:9;:21;882:10;872:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;860:49;;;;;;;;;;;;;;;;;;;;4233:65;;;;;;;;;;4265:10;4257:5;;:18;;;;;;;;;;;;;;;;;;4290:1;4285:4;:6;;;;737:9152;;;;;;",
  "deployedSourceMap": "737:9152:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2679:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9791:94;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8812:380;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2559:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2444:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6499:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2799:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::ii;:::-;;;;;;;;;;;;;;;;;;;;;811:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4994:490;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7697:628;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9421:364;;;;;;;;;;;;;:::ii;:::-;;;;;;;;;;;;;;;;;;;;;8361:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2679:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9791:94::-;9835:4;9857:21;9850:28;;9791:94;:::o;8812:380::-;8923:13;8898:10;3282:8;3243:47;;:9;:19;3253:8;3243:19;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:47;;;3234:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8948:17:::1;8968:8;:26;8977:16;8968:26;;;;;;;;;;;;;;;8948:46;;9021:1;9004;:7;;;:19;;;;;;;;;;;;;;;;;;9033:12;;;;;;;;;;;;;;;;::::0;:1:::1;:6;;:12;;;;;;;;;;;;:::i;:::-;;9055:14;;;;;;;;;;;;;;;;::::0;:1:::1;:8;;:14;;;;;;;;;;;;:::i;:::-;;9079:19;;;;;;;;;;;;;;;;::::0;:1:::1;:13;;:19;;;;;;;;;;;;:::i;:::-;;9127:1;9108;:16;;:20;;;;9148:31;;;;;;;;;;;;;;;;::::0;::::1;;;8812:380:::0;;;;:::o;2559:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6997:694::-;7131:4;7091:10;3282:8;3243:47;;:9;:19;3253:8;3243:19;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:47;;;3234:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7111:10:::1;3625:1;3581:46;;:8;:26;3590:16;3581:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3573:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3719:13;3683:49;;;;;;;;:8;:26;3692:16;3683:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3675:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;7202:16:::2;7155:63;;:9;:27;7165:16;7155:27;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:63;;;7147:120;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;7326:10;7285:51;;:9;:21;7295:10;7285:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:51;;;7277:104;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;7391:17;7411:8;:20;7420:10;7411:20;;;;;;;;;;;;;;;7391:40;;7451:12;7441:1;:7;;;:22;;;;;;;;;;;;;;;;;;;;;;;;7473:15;7491:6;:24;7498:16;7491:24;;;;;;;;;;;;;;;7473:42;;7525:18;7546:9;:27;7556:16;7546:27;;;;;;;;;;;;;;;7525:48;;7583:18;7604:1;:17;;;;;;;;;;;;7583:38;;7632:2;:11;;:31;7654:7;7644:1;:7;;;:18;7632:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;7680:4;7673:11;;;;;;3342:1:::1;6997:694:::0;;;;:::o;2444:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;838:16::-;;;;:::o;6499:492::-;6694:13;6627:10;3455:9;3416:48;;:9;:20;3426:9;3416:20;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:48;;;3408:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6649:16:::1;3625:1;3581:46;;:8;:26;3590:16;3581:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3573:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3719:13;3683:49;;;;;;;;:8;:26;3692:16;3683:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3675:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4152:14:::2;4121:45;;;;;;;;:9;:21;4131:10;4121:21;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:45;;;;;;;;;4113:96;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;6739:100:::3;;;;;;;;6766:5;6739:100;;;;6789:3;6739:100;;;;6817:11;6739:100;;::::0;6718:6:::3;:18;6725:10;6718:18;;;;;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6880:16;6849:47:::0;::::3;;;;;;;:9;:21;6859:10;6849:21;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:47;;;;;;;;::::0;;6911:34:::3;6928:10;6939:5;6911:34;;;;;;;;;;;;;;;;;;;;;;;;;;6955:29;;;;;;;;;;;;;;;;::::0;::::3;;3508:1:::1;6499:492:::0;;;;;;;:::o;2799:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4406:476::-;4524:4;4602:1;4548:56;;:9;:26;4558:15;4548:26;;;;;;;;;;;;;;;:42;;;;;;;;;;;;:56;;;4540:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4687:96;;;;;;;;4728:15;4687:96;;;;;;4764:8;4687:96;;;4660:9;:26;4670:15;4660:26;;;;;;;;;;;;;;;:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4798:31;4813:15;4798:31;;;;;;;;;;;;;;;;;;;;4853:1;4846:4;;:8;4839:4;:15;;;;4871:4;4864:11;;4406:476;;;;:::o;811:20::-;;;;;;;;;;;;:::o;4994:490::-;5097:4;5175:1;5120:57;;:9;:27;5130:16;5120:27;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:57;;;5112:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5261:132;;;;;;;;5302:16;5261:132;;;;;;5338:9;5261:132;;;;5368:14;5261:132;;;;;;;;;;;5231:9;:27;5241:16;5231:27;;;;;;;;;;;;;;;:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5404:33;5420:16;5404:33;;;;;;;;;;;;;;;;;;;;5458:1;5451:4;;:8;5444:4;:15;;;;5472:4;5465:11;;4994:490;;;;:::o;7697:628::-;7921:13;7864:10;3048:8;3034:22;;:10;:22;;;3025:32;;;;;;7892:10:::1;3625:1;3581:46;;:8;:26;3590:16;3581:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3573:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3719:13;3683:49;;;;;;;;:8;:26;3692:16;3683:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3675:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;7965:16:::2;7984:8;:20;7993:10;7984:20;;;;;;;;;;;;;;;7965:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;8027:10;8017:1;:7;;:20;;;;;;;;;::::0;::::2;8059:5;8050:1;:6;;:14;;;;8086:13;8077:1;:7;;:22;;;;;;;;;;;;;;;;;;;;;::::0;::::2;8122:7;8112:1;:8;;:17;;;;8158:12;8142:1;:13;;:28;;;;8203:15;8183:1;:17;;:35;;;::::0;::::2;8238:1;:4;;;8231:1;:4;;:11;;;::::0;::::2;8286:31;;;;;;;;;;;;;;;;::::0;::::2;;;3064:1:::1;7697:628:::0;;;;;;;:::o;9421:364::-;9461:13;9485:17;9505:8;:20;9514:10;9505:20;;;;;;;;;;;;;;;9485:40;;9554:12;9543:23;;;;;;;;:1;:7;;;;;;;;;;;;:23;;;;;;;;;9535:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9608:18;9629:9;:21;9639:10;9629:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;9608:58;;9678:10;9691:21;9678:34;;9722:2;:11;;:18;9734:5;9722:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9750:28;;;;;;;;;;;;;;;;;;;;;;9421:364;:::o;5696:797::-;5896:4;5871:10;3048:8;3034:22;;:10;:22;;;3025:32;;;;;;5957:1:::1;5919:40;;:8;:20;5928:10;5919:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;5911:92;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6032:14;6021:9;:25;;6013:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6152:250;;;;;;;;6180:10;6152:250;;;;;;6209:4;6152:250;;;;6340:13;6152:250;;;;;;;;;;;;6234:6;6152:250;;;;6266:11;6152:250;;;;6306:14;6152:250;;;;6371:3;6152:250;;::::0;6129:8:::1;:20;6138:10;6129:20;;;;;;;;;;;;;;;:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6426:1;6419:4:::0;::::1;:8;6412:4;:15;;;;6442:23;6454:10;6442:23;;;;;;;;;;;;;;;;;;;;6482:4;6475:11;;5696:797:::0;;;;;;;;:::o;8361:389::-;8502:18;8521:20;8547:25;8573:19;8595:7;8446:10;3048:8;3034:22;;:10;:22;;;3025:32;;;;;;8471:16:::1;3625:1;3581:46;;:8;:26;3590:16;3581:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3573:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3719:13;3683:49;;;;;;;;:8;:26;3692:16;3683:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3675:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8622:17:::2;8642:8;:26;8651:16;8642:26;;;;;;;;;;;;;;;8622:46;;8686:1;:6;;8693:1;:8;;8702:1;:13;;8716:1;:16;;;8736:1;:4;;;8678:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:1:::1;8361:389:::0;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.9.0;\n// @title supply chain in small daily business \n/// @author veeda baha - <veedabaha@gmail.com>\n/// Allows the customer to add their project or works in to the network.\n/// Projects can be accessed by customers and Engineers .\n/// The customers can be shared or add ,get,edit and delete their projects \n/// The engineers can allow to see the record of the project.\n/// after the Engineer select a project for doing that set a value or price to that project.\n/// The custommer can see the price or value that Engineer add in to the system.\n/// The finilly the customer can accepte one of thoes values and payed the ether to engineer.\n\n import \"./InterfaceOfCuntract.sol\";\n\ncontract SmallBusiness is InterfaceOfCuntract{\n    \n    //  variables\n    address public owner ;\n    uint public deal;\n    address En =Engineers[msg.sender].engineerAddress;\n\n    //enum\n    enum State{\n      forSell,\n      Finish,\n      primsion,\n      unprmision\n    }\n  \n    //struct of customers\n    \n    struct customer{\n        address payable customerAddress;\n        string Name;\n    }\n    \n    //struct of Engineers\n    struct Engineer{\n      address payable engineerAddress;\n        string Name;\n        State state;\n       \n    }\n    \n    //struct of projects\n   struct Project{\n       address owner;\n        string Name;\n        State state;\n        string skills;\n        string information;\n        uint averageOfprice;\n        uint id;\n     \n    }\n\n    // struct of offer\n    struct offer{\n        uint256 price;\n        uint256 day;\n        string moreInform;\n    }\n    \n    /* \n   * Events\n   */\n      /// @notice Emitted when a Engineer is registred \n    /// @param _address Engineer address\n    event logAddCustomer(address _address);\n\n    /// @notice Emitted when a customer is registred \n    /// @param _address customer address\n    event logAddEngineers(address _address);\n\n    /// @notice Emitted when a Project is posted \n    /// @param _customerAddress is the address of Project\n    event PostProject(address _customerAddress);\n\n    /// @notice Emitted when Engineer add a price for working on project \n    /// @param  _customerAddress is the address of Project\n    /// @param price is the price that customer send to Engineer\n    event chooseTheProject(address _customerAddress , uint price);\n  \n    //mapping\n    \n    // store the offers of the Engineers with their project id\n    mapping( address => offer) public offers;\n    \n    //store struct of customers in mapping with their addresses\n    mapping(address => customer) public customers;\n    \n    //store struct of Engineers in mapping with their addresses\n    mapping (address=> Engineer) public Engineers;\n    \n     //store struct of projects in mapping with their addresses\n    mapping (address => Project) public projects;\n    \n    /* \n   * Modifiers\n   */\n\n    // Create a modifer, isOwner that checks if the msg.sender is the owner of the contract\n\n    modifier verifyCaller (address _address) { \n    require (msg.sender == _address); \n    _;\n    }\n    \n    modifier isOwner () { \n    require (owner == msg.sender,\n    \"Caller is not owner\"); \n    _;\n    }\n \n    modifier isCustomer(address _address){\n        require( customers[_address].customerAddress == _address,\n        \"this account is not Customer.\");\n        _;\n    }\n    \n    modifier isEngineer(address _Engineer){\n        require(Engineers[_Engineer].engineerAddress== _Engineer,\n        \"caller isnot Engineer\");\n        _;\n    }\n\n    modifier forSell(address _customerAddress){\n       require(projects[_customerAddress].owner != address(0), \n       \"The project is not nothing\");\n       require(projects[_customerAddress].state == State.forSell,\n       \"the project has already done..\");\n       _;\n    }\n    \n    modifier Finish(address _customerAddress){\n       require(projects[_customerAddress].owner != address(0), \n       \"The project is not nothing\");\n       require(projects[_customerAddress].state == State.Finish,\n       \"this Project has already been for sell\");\n       _;\n    }\n    modifier verifyState(){\n        require(Engineers[msg.sender].state == State.primsion,\n        \"this account already set value\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        deal=0;\n    }\n    \n    //add customer`s address in to mapping\n    //add the parameters of customer in to struct\n    \n    function addCustomer(address payable customerAddress , \n    string memory yourName) \n    public override \n    returns(bool) {\n        require(customers[customerAddress].customerAddress == address(0),\n        \"this address is already registred\");\n        customers[customerAddress]=customer({\n            customerAddress : customerAddress,\n            Name : yourName\n        });\n        emit logAddCustomer(customerAddress);\n        deal = deal + 1;\n        return true;\n    } \n    \n    \n    //add Engineers`s address in to mapping\n    //add more details in to Engineer`s struct\n    \n    function addEngineer(address payable _engineerAddress,string memory _yourName) public override returns(bool){\n        require(Engineers[_engineerAddress].engineerAddress == address(0),\n        \"this address already registred.\");\n        Engineers[_engineerAddress] = Engineer({\n            engineerAddress : _engineerAddress,\n            Name :_yourName,\n            state :State.primsion\n        });\n    emit logAddEngineers(_engineerAddress);\n     deal = deal + 1;\n    return true;\n\n    }\n    \n    ///add Project`s id in to mapping\n    ///check the state of project should be forSell\n    ///check the modifier is customer to call that function \n    ///the customer should call that function\n    \n    function addProject(string memory Name,\n    string memory skills,string memory information\n    ,uint averageOfprice , uint _id) \n    public override payable \n    verifyCaller(msg.sender) \n    returns(bool){\n        require(projects[msg.sender].owner == address(0), \n        \"this project already is exist.\");\n        require(msg.value>=averageOfprice,\n        \"the value you send should be less than your current average.\");\n        projects[msg.sender] = Project({\n            owner:msg.sender,\n            Name:Name,\n            skills:skills,\n            information:information,\n            averageOfprice:averageOfprice,\n            state:State.forSell,\n            id: _id\n           \n             });\n        deal = deal + 1;\n        emit PostProject(msg.sender);\n        return true;\n    }\n\n    function chooseToWork(address _customerAddress,uint256 day, uint price , string memory information)  public override isEngineer(msg.sender)   forSell(_customerAddress) verifyState() \n    returns(string memory){\n        offers[msg.sender] = offer({\n            price: price,\n            day:day,\n            moreInform:information\n        });\n        Engineers[msg.sender].state == State.unprmision;\n        emit chooseTheProject(msg.sender,price);\n        return \"set value on project\";\n    }\n\n    function accepteCustomer(address payable _engineerAddress) public payable override isCustomer(msg.sender) forSell(msg.sender) returns(bool) {\n        require(Engineers[_engineerAddress].engineerAddress == _engineerAddress ,\n            \"this account is not an engineer\");\n        require(customers[msg.sender].customerAddress == msg.sender ,\n            \"this customer is not Exist.\");\n        Project storage p = projects[msg.sender];\n        p.state = State.Finish;\n        offer storage o = offers[_engineerAddress];\n        Engineer storage e = Engineers[_engineerAddress];\n        address payable to = e.engineerAddress; \n        to.transfer(o.price *(1 ether));\n        return true;\n    }\n\n    function EditProject(string memory _name,string memory _skills,\n        string memory _information,uint _averageOfprice )\n        public override\n        verifyCaller(msg.sender)\n        forSell(msg.sender)\n        returns (string memory)   \n        { \n      \n        Project memory p = projects[msg.sender];\n           p.owner = msg.sender;\n           p.Name = _name;\n           p.state= State.forSell;\n           p.skills= _skills;\n           p.information = _information;\n           p. averageOfprice = _averageOfprice;\n           p.id = p.id;\n          \n             \n        \n        return \"the project was update\"; \n    }\n\n    // get project parameters\n    function getProject(address _customerAddress) public view override \n    verifyCaller(msg.sender) \n    forSell(_customerAddress)\n    returns (string memory Name,string memory skills,\n    string memory information,uint averageOfprice , uint id )   \n    {\n        Project storage p = projects[_customerAddress];\n        return (p.Name,p.skills,p.information,p.averageOfprice  , p.id ); \n    }\n    \n\n    //can delete the project with the id of project\n   function deleteProject(address _customerAddress) \n    public override \n    isCustomer(msg.sender) \n    returns(string memory){\n\n        Project storage p = projects[_customerAddress];\n        p.owner= address(0);\n        p.Name = \" \";\n        p.skills = \" \";\n        p.information = \" \";\n        p.averageOfprice = 0 ;\n        \n        return \"the project was delete\";\n\n    \n    }\n\n\n    // function paymentFull() public view  returns(uint){\n    //     uint day =offers[msg.sender].day;\n    //     uint a =day-(day*1/2);\n    //     // require(offers[msg.sender].day == a )\n    //     return a;\n\n    // }\n\n\n    function _passthevalue() public returns(string memory){\n        Project storage p = projects[msg.sender];\n        require(p.state == State.Finish ,\"this project was not finish\");\n        address payable to = customers[msg.sender].customerAddress ; \n        uint value = address(this).balance;\n        to.transfer(value);\n        return \"the value is return\";\n    }\n\n    function getBalance() external view returns(uint){\n        return address(this).balance;\n    }\n\n\n}",
  "sourcePath": "C:/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol",
  "ast": {
    "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol",
    "exportedSymbols": {
      "InterfaceOfCuntract": [
        99
      ],
      "SmallBusiness": [
        903
      ]
    },
    "id": 904,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 134,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/InterfaceOfCuntract.sol",
        "file": "./InterfaceOfCuntract.sol",
        "id": 135,
        "nodeType": "ImportDirective",
        "scope": 904,
        "sourceUnit": 100,
        "src": "700:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 136,
              "name": "InterfaceOfCuntract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 99,
              "src": "763:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterfaceOfCuntract_$99",
                "typeString": "contract InterfaceOfCuntract"
              }
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "763:19:2"
          }
        ],
        "contractDependencies": [
          99
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 903,
        "linearizedBaseContracts": [
          903,
          99
        ],
        "name": "SmallBusiness",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 139,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "811:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 138,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "553df021",
            "id": 141,
            "mutability": "mutable",
            "name": "deal",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "838:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "838:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 148,
            "mutability": "mutable",
            "name": "En",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "860:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 142,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "baseExpression": {
                  "id": 143,
                  "name": "Engineers",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 221,
                  "src": "872:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                    "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                  }
                },
                "id": 146,
                "indexExpression": {
                  "expression": {
                    "id": 144,
                    "name": "msg",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4294967281,
                    "src": "882:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_message",
                      "typeString": "msg"
                    }
                  },
                  "id": 145,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "memberName": "sender",
                  "nodeType": "MemberAccess",
                  "src": "882:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "isConstant": false,
                "isLValue": true,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "IndexAccess",
                "src": "872:21:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Engineer_$165_storage",
                  "typeString": "struct SmallBusiness.Engineer storage ref"
                }
              },
              "id": 147,
              "isConstant": false,
              "isLValue": true,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "engineerAddress",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 160,
              "src": "872:37:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SmallBusiness.State",
            "id": 153,
            "members": [
              {
                "id": 149,
                "name": "forSell",
                "nodeType": "EnumValue",
                "src": "945:7:2"
              },
              {
                "id": 150,
                "name": "Finish",
                "nodeType": "EnumValue",
                "src": "960:6:2"
              },
              {
                "id": 151,
                "name": "primsion",
                "nodeType": "EnumValue",
                "src": "974:8:2"
              },
              {
                "id": 152,
                "name": "unprmision",
                "nodeType": "EnumValue",
                "src": "990:10:2"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "927:79:2"
          },
          {
            "canonicalName": "SmallBusiness.customer",
            "id": 158,
            "members": [
              {
                "constant": false,
                "id": 155,
                "mutability": "mutable",
                "name": "customerAddress",
                "nodeType": "VariableDeclaration",
                "scope": 158,
                "src": "1070:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1070:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 157,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 158,
                "src": "1111:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 156,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1111:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "customer",
            "nodeType": "StructDefinition",
            "scope": 903,
            "src": "1045:84:2",
            "visibility": "public"
          },
          {
            "canonicalName": "SmallBusiness.Engineer",
            "id": 165,
            "members": [
              {
                "constant": false,
                "id": 160,
                "mutability": "mutable",
                "name": "engineerAddress",
                "nodeType": "VariableDeclaration",
                "scope": 165,
                "src": "1188:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 159,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 162,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 165,
                "src": "1229:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 161,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1229:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 164,
                "mutability": "mutable",
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 165,
                "src": "1250:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$153",
                  "typeString": "enum SmallBusiness.State"
                },
                "typeName": {
                  "id": 163,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 153,
                  "src": "1250:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$153",
                    "typeString": "enum SmallBusiness.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Engineer",
            "nodeType": "StructDefinition",
            "scope": 903,
            "src": "1165:111:2",
            "visibility": "public"
          },
          {
            "canonicalName": "SmallBusiness.Project",
            "id": 180,
            "members": [
              {
                "constant": false,
                "id": 167,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1333:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 166,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1333:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 169,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1356:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 168,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1356:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 171,
                "mutability": "mutable",
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1377:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$153",
                  "typeString": "enum SmallBusiness.State"
                },
                "typeName": {
                  "id": 170,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 153,
                  "src": "1377:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$153",
                    "typeString": "enum SmallBusiness.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 173,
                "mutability": "mutable",
                "name": "skills",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1398:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 172,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1398:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 175,
                "mutability": "mutable",
                "name": "information",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1421:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 174,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 177,
                "mutability": "mutable",
                "name": "averageOfprice",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1449:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 176,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 179,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 180,
                "src": "1478:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 178,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Project",
            "nodeType": "StructDefinition",
            "scope": 903,
            "src": "1310:188:2",
            "visibility": "public"
          },
          {
            "canonicalName": "SmallBusiness.offer",
            "id": 187,
            "members": [
              {
                "constant": false,
                "id": 182,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 187,
                "src": "1549:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 181,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1549:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "mutability": "mutable",
                "name": "day",
                "nodeType": "VariableDeclaration",
                "scope": 187,
                "src": "1572:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 183,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1572:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 186,
                "mutability": "mutable",
                "name": "moreInform",
                "nodeType": "VariableDeclaration",
                "scope": 187,
                "src": "1593:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 185,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1593:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "offer",
            "nodeType": "StructDefinition",
            "scope": 903,
            "src": "1527:90:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "1655:90:2",
              "text": "@notice Emitted when a Engineer is registred \n @param _address Engineer address"
            },
            "id": 192,
            "name": "logAddCustomer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1771:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:18:2"
            },
            "src": "1750:39:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 193,
              "nodeType": "StructuredDocumentation",
              "src": "1795:90:2",
              "text": "@notice Emitted when a customer is registred \n @param _address customer address"
            },
            "id": 197,
            "name": "logAddEngineers",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1912:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1911:18:2"
            },
            "src": "1890:40:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 198,
              "nodeType": "StructuredDocumentation",
              "src": "1936:103:2",
              "text": "@notice Emitted when a Project is posted \n @param _customerAddress is the address of Project"
            },
            "id": 202,
            "name": "PostProject",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2062:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:26:2"
            },
            "src": "2044:44:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "2094:193:2",
              "text": "@notice Emitted when Engineer add a price for working on project \n @param  _customerAddress is the address of Project\n @param price is the price that customer send to Engineer"
            },
            "id": 209,
            "name": "chooseTheProject",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2315:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2342:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2314:39:2"
            },
            "src": "2292:62:2"
          },
          {
            "constant": false,
            "functionSelector": "413bf38f",
            "id": 213,
            "mutability": "mutable",
            "name": "offers",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2444:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$187_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.offer)"
            },
            "typeName": {
              "id": 212,
              "keyType": {
                "id": 210,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2453:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2444:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$187_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.offer)"
              },
              "valueType": {
                "id": 211,
                "name": "offer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 187,
                "src": "2464:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_offer_$187_storage_ptr",
                  "typeString": "struct SmallBusiness.offer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "336989ae",
            "id": 217,
            "mutability": "mutable",
            "name": "customers",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2559:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.customer)"
            },
            "typeName": {
              "id": 216,
              "keyType": {
                "id": 214,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2567:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2559:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.customer)"
              },
              "valueType": {
                "id": 215,
                "name": "customer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 158,
                "src": "2578:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_customer_$158_storage_ptr",
                  "typeString": "struct SmallBusiness.customer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "03bc470d",
            "id": 221,
            "mutability": "mutable",
            "name": "Engineers",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2679:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.Engineer)"
            },
            "typeName": {
              "id": 220,
              "keyType": {
                "id": 218,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2688:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2679:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.Engineer)"
              },
              "valueType": {
                "id": 219,
                "name": "Engineer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 165,
                "src": "2698:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Engineer_$165_storage_ptr",
                  "typeString": "struct SmallBusiness.Engineer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "840e78fd",
            "id": 225,
            "mutability": "mutable",
            "name": "projects",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2799:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.Project)"
            },
            "typeName": {
              "id": 224,
              "keyType": {
                "id": 222,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2808:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2799:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.Project)"
              },
              "valueType": {
                "id": 223,
                "name": "Project",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 180,
                "src": "2819:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                  "typeString": "struct SmallBusiness.Project"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "3018:54:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 230,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3034:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3034:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 232,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "3048:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3034:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3025:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3025:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:32:2"
                },
                {
                  "id": 236,
                  "nodeType": "PlaceholderStatement",
                  "src": "3064:1:2"
                }
              ]
            },
            "id": 238,
            "name": "verifyCaller",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "3000:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3000:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2999:18:2"
            },
            "src": "2977:95:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "3102:78:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 241,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "3118:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 242,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3127:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3127:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3118:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e6572",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3143:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        },
                        "value": "Caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3109:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3109:56:2"
                },
                {
                  "id": 248,
                  "nodeType": "PlaceholderStatement",
                  "src": "3172:1:2"
                }
              ]
            },
            "id": 250,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3099:2:2"
            },
            "src": "3082:98:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "3224:126:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 255,
                              "name": "customers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "3243:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "id": 256,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "3253:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3243:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_customer_$158_storage",
                              "typeString": "struct SmallBusiness.customer storage ref"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 155,
                          "src": "3243:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 259,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "3282:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3243:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206163636f756e74206973206e6f7420437573746f6d65722e",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3300:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a21e2482cff0d301e9da97ad72957e24a75f61fa8acf94fa888828436a186b5",
                          "typeString": "literal_string \"this account is not Customer.\""
                        },
                        "value": "this account is not Customer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a21e2482cff0d301e9da97ad72957e24a75f61fa8acf94fa888828436a186b5",
                          "typeString": "literal_string \"this account is not Customer.\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3234:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:98:2"
                },
                {
                  "id": 264,
                  "nodeType": "PlaceholderStatement",
                  "src": "3342:1:2"
                }
              ]
            },
            "id": 266,
            "name": "isCustomer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "3207:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3207:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3206:18:2"
            },
            "src": "3187:163:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "3398:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 271,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "3416:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 273,
                            "indexExpression": {
                              "id": 272,
                              "name": "_Engineer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "3426:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3416:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$165_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "engineerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "3416:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 275,
                          "name": "_Engineer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "3455:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3416:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c65722069736e6f7420456e67696e656572",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3474:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b617bd5ec7b3a83916097c4d59b438904070317990f7dfa8afc1b45629c54eb5",
                          "typeString": "literal_string \"caller isnot Engineer\""
                        },
                        "value": "caller isnot Engineer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b617bd5ec7b3a83916097c4d59b438904070317990f7dfa8afc1b45629c54eb5",
                          "typeString": "literal_string \"caller isnot Engineer\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3408:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:90:2"
                },
                {
                  "id": 280,
                  "nodeType": "PlaceholderStatement",
                  "src": "3508:1:2"
                }
              ]
            },
            "id": 282,
            "name": "isEngineer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_Engineer",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3380:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3379:19:2"
            },
            "src": "3360:156:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "3564:227:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 287,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3581:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 289,
                            "indexExpression": {
                              "id": 288,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "3590:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3581:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$180_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "3581:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3625:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3617:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 291,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3617:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3617:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3581:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3637:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        },
                        "value": "The project is not nothing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3573:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3573:93:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3573:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$153",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 300,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3683:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 302,
                            "indexExpression": {
                              "id": 301,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "3692:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3683:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$180_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "3683:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 304,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "3719:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "forSell",
                          "nodeType": "MemberAccess",
                          "src": "3719:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "3683:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468652070726f6a6563742068617320616c726561647920646f6e652e2e",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3741:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48ad3683c258fceaa1c0746045810997cbaeec0c2f0385833b5777bb1d4628af",
                          "typeString": "literal_string \"the project has already done..\""
                        },
                        "value": "the project has already done.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48ad3683c258fceaa1c0746045810997cbaeec0c2f0385833b5777bb1d4628af",
                          "typeString": "literal_string \"the project has already done..\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3675:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:99:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:99:2"
                },
                {
                  "id": 310,
                  "nodeType": "PlaceholderStatement",
                  "src": "3783:1:2"
                }
              ]
            },
            "id": 312,
            "name": "forSell",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3539:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3538:26:2"
            },
            "src": "3522:269:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "3842:234:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 317,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3859:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 319,
                            "indexExpression": {
                              "id": 318,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3868:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3859:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$180_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "3859:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3903:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3895:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 321,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3895:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3895:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3859:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3915:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        },
                        "value": "The project is not nothing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3851:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:93:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "3851:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$153",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 330,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3961:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 332,
                            "indexExpression": {
                              "id": 331,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3970:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3961:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$180_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "3961:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 334,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "3997:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finish",
                          "nodeType": "MemberAccess",
                          "src": "3997:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "3961:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732050726f6a6563742068617320616c7265616479206265656e20666f722073656c6c",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4018:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa3b5d1a096a651bb96b440efaaa92c2d2829964a79312f48fac5eece5415c6b",
                          "typeString": "literal_string \"this Project has already been for sell\""
                        },
                        "value": "this Project has already been for sell"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa3b5d1a096a651bb96b440efaaa92c2d2829964a79312f48fac5eece5415c6b",
                          "typeString": "literal_string \"this Project has already been for sell\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3953:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3953:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3953:106:2"
                },
                {
                  "id": 340,
                  "nodeType": "PlaceholderStatement",
                  "src": "4068:1:2"
                }
              ]
            },
            "id": 342,
            "name": "Finish",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3817:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3816:26:2"
            },
            "src": "3801:275:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "4103:124:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$153",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 345,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "4121:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 348,
                            "indexExpression": {
                              "expression": {
                                "id": 346,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4131:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4131:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4121:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$165_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 164,
                          "src": "4121:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 350,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "4152:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "primsion",
                          "nodeType": "MemberAccess",
                          "src": "4152:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "4121:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206163636f756e7420616c7265616479207365742076616c7565",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4176:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_820863d9742345c6cc06a0445b8222575c685dbc118061dc54d90ac56718eed3",
                          "typeString": "literal_string \"this account already set value\""
                        },
                        "value": "this account already set value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_820863d9742345c6cc06a0445b8222575c685dbc118061dc54d90ac56718eed3",
                          "typeString": "literal_string \"this account already set value\""
                        }
                      ],
                      "id": 344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4113:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:96:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "4113:96:2"
                },
                {
                  "id": 356,
                  "nodeType": "PlaceholderStatement",
                  "src": "4219:1:2"
                }
              ]
            },
            "id": 358,
            "name": "verifyState",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4101:2:2"
            },
            "src": "4081:146:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "4247:51:2",
              "statements": [
                {
                  "expression": {
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 361,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4257:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 362,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4265:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4265:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4257:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "4257:18:2"
                },
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 366,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "4285:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4290:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4285:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "4285:6:2"
                }
              ]
            },
            "id": 371,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4244:2:2"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4247:0:2"
            },
            "scope": 903,
            "src": "4233:65:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12
            ],
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "4530:352:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 382,
                              "name": "customers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "4548:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                              }
                            },
                            "id": 384,
                            "indexExpression": {
                              "id": 383,
                              "name": "customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "4558:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4548:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_customer_$158_storage",
                              "typeString": "struct SmallBusiness.customer storage ref"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 155,
                          "src": "4548:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4602:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4594:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4594:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4594:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4548:56:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206164647265737320697320616c726561647920726567697374726564",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4614:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cea4d4fa71e7864649d08ce6f83215c1bf137c9a1ac10210dfa3a69790c872cd",
                          "typeString": "literal_string \"this address is already registred\""
                        },
                        "value": "this address is already registred"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cea4d4fa71e7864649d08ce6f83215c1bf137c9a1ac10210dfa3a69790c872cd",
                          "typeString": "literal_string \"this address is already registred\""
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4540:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4540:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:110:2"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 394,
                        "name": "customers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4660:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                        }
                      },
                      "id": 396,
                      "indexExpression": {
                        "id": 395,
                        "name": "customerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "4670:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4660:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$158_storage",
                        "typeString": "struct SmallBusiness.customer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 398,
                          "name": "customerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "4728:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 399,
                          "name": "yourName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "4764:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 397,
                        "name": "customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "4687:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_customer_$158_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.customer storage pointer)"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "customerAddress",
                        "Name"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4687:96:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$158_memory_ptr",
                        "typeString": "struct SmallBusiness.customer memory"
                      }
                    },
                    "src": "4660:123:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_customer_$158_storage",
                      "typeString": "struct SmallBusiness.customer storage ref"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:123:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 404,
                        "name": "customerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "4813:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 403,
                      "name": "logAddCustomer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "4798:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4798:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "EmitStatement",
                  "src": "4793:36:2"
                },
                {
                  "expression": {
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 407,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "4839:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 408,
                        "name": "deal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "4846:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4853:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4846:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4839:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "4839:15:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4871:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 380,
                  "id": 414,
                  "nodeType": "Return",
                  "src": "4864:11:2"
                }
              ]
            },
            "functionSelector": "88bc8150",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCustomer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 377,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4502:8:2"
            },
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4427:31:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4427:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "yourName",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4466:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4466:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4426:63:2"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4524:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4524:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4523:6:2"
            },
            "scope": 903,
            "src": "4406:476:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22
            ],
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "5102:382:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 427,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "5120:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "id": 428,
                              "name": "_engineerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "5130:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5120:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$165_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "engineerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "5120:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5175:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5167:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 431,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5167:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5167:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5120:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206164647265737320616c7265616479207265676973747265642e",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5187:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f02aa03166603fb488119f4e88edc7ae399185607c207053aa2dc7b20d01dbf",
                          "typeString": "literal_string \"this address already registred.\""
                        },
                        "value": "this address already registred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f02aa03166603fb488119f4e88edc7ae399185607c207053aa2dc7b20d01dbf",
                          "typeString": "literal_string \"this address already registred.\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5112:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5112:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "5112:109:2"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 439,
                        "name": "Engineers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "5231:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "id": 440,
                        "name": "_engineerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "5241:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5231:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$165_storage",
                        "typeString": "struct SmallBusiness.Engineer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 443,
                          "name": "_engineerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "5302:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 444,
                          "name": "_yourName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "5338:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 445,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "5368:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "primsion",
                          "nodeType": "MemberAccess",
                          "src": "5368:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        ],
                        "id": 442,
                        "name": "Engineer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "5261:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Engineer_$165_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.Engineer storage pointer)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "engineerAddress",
                        "Name",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5261:132:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$165_memory_ptr",
                        "typeString": "struct SmallBusiness.Engineer memory"
                      }
                    },
                    "src": "5231:162:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Engineer_$165_storage",
                      "typeString": "struct SmallBusiness.Engineer storage ref"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "5231:162:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "_engineerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "5420:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 450,
                      "name": "logAddEngineers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "5404:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "5399:38:2"
                },
                {
                  "expression": {
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 454,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "5444:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 455,
                        "name": "deal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "5451:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5458:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5451:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5444:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:15:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5472:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 425,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "5465:11:2"
                }
              ]
            },
            "functionSelector": "a871ca5d",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEngineer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 422,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5080:8:2"
            },
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "_engineerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "5015:32:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5015:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_yourName",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "5048:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5048:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5014:58:2"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "5097:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5097:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5096:6:2"
            },
            "scope": 903,
            "src": "4994:490:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              38
            ],
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "5901:592:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 485,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "5919:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 488,
                            "indexExpression": {
                              "expression": {
                                "id": 486,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5928:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5928:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5919:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$180_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 489,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "5919:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5957:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5949:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5949:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5949:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5919:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732070726f6a65637420616c72656164792069732065786973742e",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5970:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da9b8ddb4929eb16dec1eb567070cd3dbd4e024729714b8dd3a83a48d9db14c1",
                          "typeString": "literal_string \"this project already is exist.\""
                        },
                        "value": "this project already is exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da9b8ddb4929eb16dec1eb567070cd3dbd4e024729714b8dd3a83a48d9db14c1",
                          "typeString": "literal_string \"this project already is exist.\""
                        }
                      ],
                      "id": 484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5911:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:92:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:92:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 499,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6021:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6021:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 501,
                          "name": "averageOfprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "6032:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6021:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6056:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f626ceb74ac075baf1a9780a1808432c8439e35ad343e8b0986b7bae7fa9ec1",
                          "typeString": "literal_string \"the value you send should be less than your current average.\""
                        },
                        "value": "the value you send should be less than your current average."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f626ceb74ac075baf1a9780a1808432c8439e35ad343e8b0986b7bae7fa9ec1",
                          "typeString": "literal_string \"the value you send should be less than your current average.\""
                        }
                      ],
                      "id": 498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6013:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6013:106:2"
                },
                {
                  "expression": {
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 506,
                        "name": "projects",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "6129:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "expression": {
                          "id": 507,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6138:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6138:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6129:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_storage",
                        "typeString": "struct SmallBusiness.Project storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 511,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6180:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6180:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 513,
                          "name": "Name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "6209:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 514,
                          "name": "skills",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "6234:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 515,
                          "name": "information",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "6266:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 516,
                          "name": "averageOfprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "6306:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 517,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "6340:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "forSell",
                          "nodeType": "MemberAccess",
                          "src": "6340:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        {
                          "id": 519,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "6371:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 510,
                        "name": "Project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "6152:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Project_$180_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.Project storage pointer)"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "owner",
                        "Name",
                        "skills",
                        "information",
                        "averageOfprice",
                        "state",
                        "id"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6152:250:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                        "typeString": "struct SmallBusiness.Project memory"
                      }
                    },
                    "src": "6129:273:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$180_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "6129:273:2"
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 523,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "6412:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 524,
                        "name": "deal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "6419:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6426:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6419:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6412:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "6412:15:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6454:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6454:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 529,
                      "name": "PostProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "6442:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6442:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "EmitStatement",
                  "src": "6437:28:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6482:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 483,
                  "id": 535,
                  "nodeType": "Return",
                  "src": "6475:11:2"
                }
              ]
            },
            "documentation": {
              "id": 464,
              "nodeType": "StructuredDocumentation",
              "src": "5494:192:2",
              "text": "add Project`s id in to mapping\ncheck the state of project should be forSell\ncheck the modifier is customer to call that function \nthe customer should call that function"
            },
            "functionSelector": "d026c425",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 478,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5871:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5871:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 480,
                "modifierName": {
                  "id": 477,
                  "name": "verifyCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 238,
                  "src": "5858:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5858:24:2"
              }
            ],
            "name": "addProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 476,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5836:8:2"
            },
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "Name",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5716:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5716:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5740:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5740:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "information",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5761:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5761:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "averageOfprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5792:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5792:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5814:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5814:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5715:108:2"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5896:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5896:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5895:6:2"
            },
            "scope": 903,
            "src": "5696:797:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              82
            ],
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "6708:283:2",
              "statements": [
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 560,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "6718:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$187_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.offer storage ref)"
                        }
                      },
                      "id": 563,
                      "indexExpression": {
                        "expression": {
                          "id": 561,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6725:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6725:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6718:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$187_storage",
                        "typeString": "struct SmallBusiness.offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 565,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "6766:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 566,
                          "name": "day",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "6789:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 567,
                          "name": "information",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "6817:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 564,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "6739:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_offer_$187_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.offer storage pointer)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "price",
                        "day",
                        "moreInform"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6739:100:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$187_memory_ptr",
                        "typeString": "struct SmallBusiness.offer memory"
                      }
                    },
                    "src": "6718:121:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_offer_$187_storage",
                      "typeString": "struct SmallBusiness.offer storage ref"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "6718:121:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$153",
                      "typeString": "enum SmallBusiness.State"
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 571,
                          "name": "Engineers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "6849:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                            "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                          }
                        },
                        "id": 574,
                        "indexExpression": {
                          "expression": {
                            "id": 572,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6859:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6859:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6849:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Engineer_$165_storage",
                          "typeString": "struct SmallBusiness.Engineer storage ref"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 164,
                      "src": "6849:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$153",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 576,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "6880:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                          "typeString": "type(enum SmallBusiness.State)"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "unprmision",
                      "nodeType": "MemberAccess",
                      "src": "6880:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$153",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "src": "6849:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "6849:47:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6928:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6928:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 583,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "6939:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 580,
                      "name": "chooseTheProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "6911:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6911:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "EmitStatement",
                  "src": "6906:39:2"
                },
                {
                  "expression": {
                    "hexValue": "7365742076616c7565206f6e2070726f6a656374",
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6962:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_38bb434703185950c832a0c6d6eaed12aa33c8ddaa0b80d716b987534b74209e",
                      "typeString": "literal_string \"set value on project\""
                    },
                    "value": "set value on project"
                  },
                  "functionReturnParameters": 559,
                  "id": 587,
                  "nodeType": "Return",
                  "src": "6955:29:2"
                }
              ]
            },
            "functionSelector": "78e4f934",
            "id": 589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 549,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6627:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6627:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 551,
                "modifierName": {
                  "id": 548,
                  "name": "isEngineer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 282,
                  "src": "6616:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6616:22:2"
              },
              {
                "arguments": [
                  {
                    "id": 553,
                    "name": "_customerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 539,
                    "src": "6649:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 554,
                "modifierName": {
                  "id": 552,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 312,
                  "src": "6641:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6641:25:2"
              },
              {
                "arguments": [],
                "id": 556,
                "modifierName": {
                  "id": 555,
                  "name": "verifyState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 358,
                  "src": "6667:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6667:13:2"
              }
            ],
            "name": "chooseToWork",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 547,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6607:8:2"
            },
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "6521:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6521:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "day",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "6546:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6546:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "6559:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6559:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "information",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "6572:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6572:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6520:78:2"
            },
            "returnParameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "6694:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6694:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6693:15:2"
            },
            "scope": 903,
            "src": "6499:492:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              90
            ],
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "7137:554:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 606,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "7155:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 608,
                            "indexExpression": {
                              "id": 607,
                              "name": "_engineerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "7165:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7155:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$165_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "engineerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "7155:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 610,
                          "name": "_engineerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "7202:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7155:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206163636f756e74206973206e6f7420616e20656e67696e656572",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7233:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3a575e1768ec30c540f377844b39a498d9b629f44612d5fc9eadb9e3d723a59",
                          "typeString": "literal_string \"this account is not an engineer\""
                        },
                        "value": "this account is not an engineer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3a575e1768ec30c540f377844b39a498d9b629f44612d5fc9eadb9e3d723a59",
                          "typeString": "literal_string \"this account is not an engineer\""
                        }
                      ],
                      "id": 605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7147:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7147:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "7147:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 616,
                              "name": "customers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "7285:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                              }
                            },
                            "id": 619,
                            "indexExpression": {
                              "expression": {
                                "id": 617,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7295:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7295:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7285:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_customer_$158_storage",
                              "typeString": "struct SmallBusiness.customer storage ref"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 155,
                          "src": "7285:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 621,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7326:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7326:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7285:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468697320637573746f6d6572206973206e6f742045786973742e",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7351:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0de5b351d6557eb48e363761cf6090d3026541521fe1e3365103722e0582e41",
                          "typeString": "literal_string \"this customer is not Exist.\""
                        },
                        "value": "this customer is not Exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0de5b351d6557eb48e363761cf6090d3026541521fe1e3365103722e0582e41",
                          "typeString": "literal_string \"this customer is not Exist.\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7277:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7277:104:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "7277:104:2"
                },
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "7391:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "7391:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "baseExpression": {
                      "id": 629,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "7411:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 632,
                    "indexExpression": {
                      "expression": {
                        "id": 630,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7420:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7420:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7411:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$180_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7391:40:2"
                },
                {
                  "expression": {
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 634,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "7441:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 171,
                      "src": "7441:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$153",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 637,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "7451:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                          "typeString": "type(enum SmallBusiness.State)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Finish",
                      "nodeType": "MemberAccess",
                      "src": "7451:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$153",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "src": "7441:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$153",
                      "typeString": "enum SmallBusiness.State"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "7441:22:2"
                },
                {
                  "assignments": [
                    642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 642,
                      "mutability": "mutable",
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "7473:15:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$187_storage_ptr",
                        "typeString": "struct SmallBusiness.offer"
                      },
                      "typeName": {
                        "id": 641,
                        "name": "offer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 187,
                        "src": "7473:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_offer_$187_storage_ptr",
                          "typeString": "struct SmallBusiness.offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "baseExpression": {
                      "id": 643,
                      "name": "offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "7491:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$187_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.offer storage ref)"
                      }
                    },
                    "id": 645,
                    "indexExpression": {
                      "id": 644,
                      "name": "_engineerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "7498:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7491:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_offer_$187_storage",
                      "typeString": "struct SmallBusiness.offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7473:42:2"
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "e",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "7525:18:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$165_storage_ptr",
                        "typeString": "struct SmallBusiness.Engineer"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "Engineer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 165,
                        "src": "7525:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Engineer_$165_storage_ptr",
                          "typeString": "struct SmallBusiness.Engineer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 652,
                  "initialValue": {
                    "baseExpression": {
                      "id": 649,
                      "name": "Engineers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "7546:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$165_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                      }
                    },
                    "id": 651,
                    "indexExpression": {
                      "id": 650,
                      "name": "_engineerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "7556:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7546:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Engineer_$165_storage",
                      "typeString": "struct SmallBusiness.Engineer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7525:48:2"
                },
                {
                  "assignments": [
                    654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 654,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "7583:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 653,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7583:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 657,
                  "initialValue": {
                    "expression": {
                      "id": 655,
                      "name": "e",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "7604:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$165_storage_ptr",
                        "typeString": "struct SmallBusiness.Engineer storage pointer"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "engineerAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 160,
                    "src": "7604:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7583:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 661,
                            "name": "o",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "7644:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_offer_$187_storage_ptr",
                              "typeString": "struct SmallBusiness.offer storage pointer"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 182,
                          "src": "7644:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "hexValue": "31",
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7654:7:2",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 664,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7653:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7644:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 658,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "7632:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7632:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7632:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "7632:31:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7680:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 604,
                  "id": 669,
                  "nodeType": "Return",
                  "src": "7673:11:2"
                }
              ]
            },
            "functionSelector": "3d8f426d",
            "id": 671,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 595,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7091:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7091:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 597,
                "modifierName": {
                  "id": 594,
                  "name": "isCustomer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 266,
                  "src": "7080:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7080:22:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 599,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7111:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7111:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 601,
                "modifierName": {
                  "id": 598,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 312,
                  "src": "7103:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7103:19:2"
              }
            ],
            "name": "accepteCustomer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 593,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7071:8:2"
            },
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "_engineerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "7022:32:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7022:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7021:34:2"
            },
            "returnParameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "7131:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7131:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7130:6:2"
            },
            "scope": 903,
            "src": "6997:694:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              52
            ],
            "body": {
              "id": 747,
              "nodeType": "Block",
              "src": "7947:378:2",
              "statements": [
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "7965:16:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "7965:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 699,
                  "initialValue": {
                    "baseExpression": {
                      "id": 695,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "7984:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 698,
                    "indexExpression": {
                      "expression": {
                        "id": 696,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7993:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7993:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7984:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$180_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7965:39:2"
                },
                {
                  "expression": {
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 700,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8017:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "8017:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 703,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "8027:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8027:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8017:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "8017:20:2"
                },
                {
                  "expression": {
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 707,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8050:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 169,
                      "src": "8050:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 710,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "8059:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8050:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "8050:14:2"
                },
                {
                  "expression": {
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 713,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8077:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 171,
                      "src": "8077:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$153",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 716,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "8086:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                          "typeString": "type(enum SmallBusiness.State)"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "forSell",
                      "nodeType": "MemberAccess",
                      "src": "8086:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$153",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "src": "8077:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$153",
                      "typeString": "enum SmallBusiness.State"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "8077:22:2"
                },
                {
                  "expression": {
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 720,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8112:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "skills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 173,
                      "src": "8112:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 723,
                      "name": "_skills",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "8122:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8112:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "8112:17:2"
                },
                {
                  "expression": {
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 726,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8142:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "information",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 175,
                      "src": "8142:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 729,
                      "name": "_information",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8158:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8142:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "8142:28:2"
                },
                {
                  "expression": {
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 732,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8183:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "averageOfprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 177,
                      "src": "8183:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 735,
                      "name": "_averageOfprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "8203:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8183:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "8183:35:2"
                },
                {
                  "expression": {
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 738,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8231:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 179,
                      "src": "8231:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 741,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "8238:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 179,
                      "src": "8238:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8231:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "8231:11:2"
                },
                {
                  "expression": {
                    "hexValue": "7468652070726f6a6563742077617320757064617465",
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8293:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_06546cf8d2075152a53a9d278a2873fa96544eb256a79e315eeef32273a7853a",
                      "typeString": "literal_string \"the project was update\""
                    },
                    "value": "the project was update"
                  },
                  "functionReturnParameters": 692,
                  "id": 746,
                  "nodeType": "Return",
                  "src": "8286:31:2"
                }
              ]
            },
            "functionSelector": "aede6098",
            "id": 748,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 683,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7864:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7864:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 685,
                "modifierName": {
                  "id": 682,
                  "name": "verifyCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 238,
                  "src": "7851:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7851:24:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 687,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7892:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7892:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 689,
                "modifierName": {
                  "id": 686,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 312,
                  "src": "7884:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7884:19:2"
              }
            ],
            "name": "EditProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 681,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7834:8:2"
            },
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "7718:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7718:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "_skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "7738:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7738:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_information",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "7769:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7769:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_averageOfprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "7796:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7796:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7717:101:2"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "7921:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7921:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7920:15:2"
            },
            "scope": 903,
            "src": "7697:628:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              68
            ],
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "8612:138:2",
              "statements": [
                {
                  "assignments": [
                    772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 772,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "8622:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 771,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "8622:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "baseExpression": {
                      "id": 773,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "8642:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 775,
                    "indexExpression": {
                      "id": 774,
                      "name": "_customerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "8651:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8642:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$180_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8622:46:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 777,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "8686:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 778,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 169,
                        "src": "8686:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 779,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "8693:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skills",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 173,
                        "src": "8693:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 781,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "8702:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "information",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 175,
                        "src": "8702:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 783,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "8716:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "averageOfprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 177,
                        "src": "8716:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 785,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "8736:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 179,
                        "src": "8736:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 787,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8685:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,string storage ref,string storage ref,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 770,
                  "id": 788,
                  "nodeType": "Return",
                  "src": "8678:64:2"
                }
              ]
            },
            "functionSelector": "f9870705",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 754,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8446:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8446:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 756,
                "modifierName": {
                  "id": 753,
                  "name": "verifyCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 238,
                  "src": "8433:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8433:24:2"
              },
              {
                "arguments": [
                  {
                    "id": 758,
                    "name": "_customerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 750,
                    "src": "8471:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 759,
                "modifierName": {
                  "id": 757,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 312,
                  "src": "8463:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8463:25:2"
              }
            ],
            "name": "getProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 752,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8419:8:2"
            },
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8381:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8381:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8380:26:2"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "Name",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8502:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8502:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8521:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8521:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "information",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8547:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8547:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "averageOfprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8573:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8573:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8595:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8595:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8501:103:2"
            },
            "scope": 903,
            "src": "8361:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              98
            ],
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "8937:255:2",
              "statements": [
                {
                  "assignments": [
                    803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 803,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 843,
                      "src": "8948:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 802,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "8948:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 807,
                  "initialValue": {
                    "baseExpression": {
                      "id": 804,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "8968:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 806,
                    "indexExpression": {
                      "id": 805,
                      "name": "_customerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "8977:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8968:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$180_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8948:46:2"
                },
                {
                  "expression": {
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 808,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "9004:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "9004:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9021:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9013:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9013:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9013:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9004:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "9004:19:2"
                },
                {
                  "expression": {
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 817,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "9033:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 169,
                      "src": "9033:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "20",
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9042:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                        "typeString": "literal_string \" \""
                      },
                      "value": " "
                    },
                    "src": "9033:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "9033:12:2"
                },
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 823,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "9055:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "skills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 173,
                      "src": "9055:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "20",
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9066:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                        "typeString": "literal_string \" \""
                      },
                      "value": " "
                    },
                    "src": "9055:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "9055:14:2"
                },
                {
                  "expression": {
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 829,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "9079:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 831,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "information",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 175,
                      "src": "9079:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "20",
                      "id": 832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9095:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                        "typeString": "literal_string \" \""
                      },
                      "value": " "
                    },
                    "src": "9079:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:19:2"
                },
                {
                  "expression": {
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 835,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "9108:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "averageOfprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 177,
                      "src": "9108:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9127:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9108:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "9108:20:2"
                },
                {
                  "expression": {
                    "hexValue": "7468652070726f6a656374207761732064656c657465",
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9155:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_474004cf8bc1dcd5c38513e02383d2c2e197835d51339d5a7a818c07a583450b",
                      "typeString": "literal_string \"the project was delete\""
                    },
                    "value": "the project was delete"
                  },
                  "functionReturnParameters": 801,
                  "id": 842,
                  "nodeType": "Return",
                  "src": "9148:31:2"
                }
              ]
            },
            "functionSelector": "2200e21e",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 796,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8898:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8898:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 798,
                "modifierName": {
                  "id": 795,
                  "name": "isCustomer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 266,
                  "src": "8887:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8887:22:2"
              }
            ],
            "name": "deleteProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 794,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8873:8:2"
            },
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "8835:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8835:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8834:26:2"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "8923:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8923:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8922:15:2"
            },
            "scope": 903,
            "src": "8812:380:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "9475:310:2",
              "statements": [
                {
                  "assignments": [
                    850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 850,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 889,
                      "src": "9485:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 849,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "9485:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 855,
                  "initialValue": {
                    "baseExpression": {
                      "id": 851,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "9505:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$180_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 854,
                    "indexExpression": {
                      "expression": {
                        "id": 852,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9514:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9514:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9505:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$180_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9485:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$153",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 857,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "9543:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$180_storage_ptr",
                              "typeString": "struct SmallBusiness.Project storage pointer"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "9543:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 859,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "9554:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$153_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finish",
                          "nodeType": "MemberAccess",
                          "src": "9554:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "9543:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732070726f6a65637420776173206e6f742066696e697368",
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9568:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e20e1579c4ddb32976d29829607291694b179a8b9e0b6062028dba84be81b25d",
                          "typeString": "literal_string \"this project was not finish\""
                        },
                        "value": "this project was not finish"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e20e1579c4ddb32976d29829607291694b179a8b9e0b6062028dba84be81b25d",
                          "typeString": "literal_string \"this project was not finish\""
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9535:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9535:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "9535:63:2"
                },
                {
                  "assignments": [
                    866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 866,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 889,
                      "src": "9608:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 865,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9608:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 872,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 867,
                        "name": "customers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "9629:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$158_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                        }
                      },
                      "id": 870,
                      "indexExpression": {
                        "expression": {
                          "id": 868,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9639:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9639:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9629:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$158_storage",
                        "typeString": "struct SmallBusiness.customer storage ref"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "customerAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 155,
                    "src": "9629:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9608:58:2"
                },
                {
                  "assignments": [
                    874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 874,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 889,
                      "src": "9678:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 873,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9678:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 880,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 877,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9699:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SmallBusiness_$903",
                            "typeString": "contract SmallBusiness"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SmallBusiness_$903",
                            "typeString": "contract SmallBusiness"
                          }
                        ],
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9691:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9691:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9691:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9691:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9678:34:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 884,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "9734:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 881,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "9722:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9722:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9722:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "9722:18:2"
                },
                {
                  "expression": {
                    "hexValue": "7468652076616c75652069732072657475726e",
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9757:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_919f46e5d0b682f45f4544091975e46aaf3802edb064b93b9299473637e966e7",
                      "typeString": "literal_string \"the value is return\""
                    },
                    "value": "the value is return"
                  },
                  "functionReturnParameters": 848,
                  "id": 888,
                  "nodeType": "Return",
                  "src": "9750:28:2"
                }
              ]
            },
            "functionSelector": "cea1a67a",
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_passthevalue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9443:2:2"
            },
            "returnParameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "9461:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9461:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9460:15:2"
            },
            "scope": 903,
            "src": "9421:364:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "9840:45:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 897,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9865:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SmallBusiness_$903",
                            "typeString": "contract SmallBusiness"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SmallBusiness_$903",
                            "typeString": "contract SmallBusiness"
                          }
                        ],
                        "id": 896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9857:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9857:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9857:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9857:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 894,
                  "id": 900,
                  "nodeType": "Return",
                  "src": "9850:28:2"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9810:2:2"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "9835:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9835:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9834:6:2"
            },
            "scope": 903,
            "src": "9791:94:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 904,
        "src": "737:9152:2"
      }
    ],
    "src": "33:9856:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol",
      "exportedSymbols": {
        "InterfaceOfCuntract": [
          99
        ],
        "SmallBusiness": [
          903
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".24",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 134,
        "name": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "attributes": {
          "SourceUnit": 100,
          "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/InterfaceOfCuntract.sol",
          "file": "./InterfaceOfCuntract.sol",
          "scope": 904,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 135,
        "name": "ImportDirective",
        "src": "700:35:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            99
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            903,
            99
          ],
          "name": "SmallBusiness",
          "scope": 904
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "InterfaceOfCuntract",
                  "referencedDeclaration": 99,
                  "type": "contract InterfaceOfCuntract"
                },
                "id": 136,
                "name": "UserDefinedTypeName",
                "src": "763:19:2"
              }
            ],
            "id": 137,
            "name": "InheritanceSpecifier",
            "src": "763:19:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 138,
                "name": "ElementaryTypeName",
                "src": "811:7:2"
              }
            ],
            "id": 139,
            "name": "VariableDeclaration",
            "src": "811:20:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "553df021",
              "mutability": "mutable",
              "name": "deal",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 140,
                "name": "ElementaryTypeName",
                "src": "838:4:2"
              }
            ],
            "id": 141,
            "name": "VariableDeclaration",
            "src": "838:16:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "En",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 142,
                "name": "ElementaryTypeName",
                "src": "860:7:2"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": true,
                  "isPure": false,
                  "lValueRequested": false,
                  "member_name": "engineerAddress",
                  "referencedDeclaration": 160,
                  "type": "address payable"
                },
                "children": [
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "type": "struct SmallBusiness.Engineer storage ref"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 221,
                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                          "value": "Engineers"
                        },
                        "id": 143,
                        "name": "Identifier",
                        "src": "872:9:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sender",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4294967281,
                              "type": "msg",
                              "value": "msg"
                            },
                            "id": 144,
                            "name": "Identifier",
                            "src": "882:3:2"
                          }
                        ],
                        "id": 145,
                        "name": "MemberAccess",
                        "src": "882:10:2"
                      }
                    ],
                    "id": 146,
                    "name": "IndexAccess",
                    "src": "872:21:2"
                  }
                ],
                "id": 147,
                "name": "MemberAccess",
                "src": "872:37:2"
              }
            ],
            "id": 148,
            "name": "VariableDeclaration",
            "src": "860:49:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.State",
              "name": "State"
            },
            "children": [
              {
                "attributes": {
                  "name": "forSell"
                },
                "id": 149,
                "name": "EnumValue",
                "src": "945:7:2"
              },
              {
                "attributes": {
                  "name": "Finish"
                },
                "id": 150,
                "name": "EnumValue",
                "src": "960:6:2"
              },
              {
                "attributes": {
                  "name": "primsion"
                },
                "id": 151,
                "name": "EnumValue",
                "src": "974:8:2"
              },
              {
                "attributes": {
                  "name": "unprmision"
                },
                "id": 152,
                "name": "EnumValue",
                "src": "990:10:2"
              }
            ],
            "id": 153,
            "name": "EnumDefinition",
            "src": "927:79:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.customer",
              "name": "customer",
              "scope": 903,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "customerAddress",
                  "scope": 158,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address payable",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "payable",
                      "type": "address payable"
                    },
                    "id": 154,
                    "name": "ElementaryTypeName",
                    "src": "1070:15:2"
                  }
                ],
                "id": 155,
                "name": "VariableDeclaration",
                "src": "1070:31:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "Name",
                  "scope": 158,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 156,
                    "name": "ElementaryTypeName",
                    "src": "1111:6:2"
                  }
                ],
                "id": 157,
                "name": "VariableDeclaration",
                "src": "1111:11:2"
              }
            ],
            "id": 158,
            "name": "StructDefinition",
            "src": "1045:84:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.Engineer",
              "name": "Engineer",
              "scope": 903,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "engineerAddress",
                  "scope": 165,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address payable",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "payable",
                      "type": "address payable"
                    },
                    "id": 159,
                    "name": "ElementaryTypeName",
                    "src": "1188:15:2"
                  }
                ],
                "id": 160,
                "name": "VariableDeclaration",
                "src": "1188:31:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "Name",
                  "scope": 165,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 161,
                    "name": "ElementaryTypeName",
                    "src": "1229:6:2"
                  }
                ],
                "id": 162,
                "name": "VariableDeclaration",
                "src": "1229:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "state",
                  "scope": 165,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum SmallBusiness.State",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "State",
                      "referencedDeclaration": 153,
                      "type": "enum SmallBusiness.State"
                    },
                    "id": 163,
                    "name": "UserDefinedTypeName",
                    "src": "1250:5:2"
                  }
                ],
                "id": 164,
                "name": "VariableDeclaration",
                "src": "1250:11:2"
              }
            ],
            "id": 165,
            "name": "StructDefinition",
            "src": "1165:111:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.Project",
              "name": "Project",
              "scope": 903,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 166,
                    "name": "ElementaryTypeName",
                    "src": "1333:7:2"
                  }
                ],
                "id": 167,
                "name": "VariableDeclaration",
                "src": "1333:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "Name",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 168,
                    "name": "ElementaryTypeName",
                    "src": "1356:6:2"
                  }
                ],
                "id": 169,
                "name": "VariableDeclaration",
                "src": "1356:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "state",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum SmallBusiness.State",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "State",
                      "referencedDeclaration": 153,
                      "type": "enum SmallBusiness.State"
                    },
                    "id": 170,
                    "name": "UserDefinedTypeName",
                    "src": "1377:5:2"
                  }
                ],
                "id": 171,
                "name": "VariableDeclaration",
                "src": "1377:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "skills",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 172,
                    "name": "ElementaryTypeName",
                    "src": "1398:6:2"
                  }
                ],
                "id": 173,
                "name": "VariableDeclaration",
                "src": "1398:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "information",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 174,
                    "name": "ElementaryTypeName",
                    "src": "1421:6:2"
                  }
                ],
                "id": 175,
                "name": "VariableDeclaration",
                "src": "1421:18:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "averageOfprice",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 176,
                    "name": "ElementaryTypeName",
                    "src": "1449:4:2"
                  }
                ],
                "id": 177,
                "name": "VariableDeclaration",
                "src": "1449:19:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "scope": 180,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 178,
                    "name": "ElementaryTypeName",
                    "src": "1478:4:2"
                  }
                ],
                "id": 179,
                "name": "VariableDeclaration",
                "src": "1478:7:2"
              }
            ],
            "id": 180,
            "name": "StructDefinition",
            "src": "1310:188:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.offer",
              "name": "offer",
              "scope": 903,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "price",
                  "scope": 187,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 181,
                    "name": "ElementaryTypeName",
                    "src": "1549:7:2"
                  }
                ],
                "id": 182,
                "name": "VariableDeclaration",
                "src": "1549:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "day",
                  "scope": 187,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 183,
                    "name": "ElementaryTypeName",
                    "src": "1572:7:2"
                  }
                ],
                "id": 184,
                "name": "VariableDeclaration",
                "src": "1572:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "moreInform",
                  "scope": 187,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 185,
                    "name": "ElementaryTypeName",
                    "src": "1593:6:2"
                  }
                ],
                "id": 186,
                "name": "VariableDeclaration",
                "src": "1593:17:2"
              }
            ],
            "id": 187,
            "name": "StructDefinition",
            "src": "1527:90:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "logAddCustomer"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when a Engineer is registred \n @param _address Engineer address"
                },
                "id": 188,
                "name": "StructuredDocumentation",
                "src": "1655:90:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 192,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 189,
                        "name": "ElementaryTypeName",
                        "src": "1771:7:2"
                      }
                    ],
                    "id": 190,
                    "name": "VariableDeclaration",
                    "src": "1771:16:2"
                  }
                ],
                "id": 191,
                "name": "ParameterList",
                "src": "1770:18:2"
              }
            ],
            "id": 192,
            "name": "EventDefinition",
            "src": "1750:39:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "logAddEngineers"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when a customer is registred \n @param _address customer address"
                },
                "id": 193,
                "name": "StructuredDocumentation",
                "src": "1795:90:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 197,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 194,
                        "name": "ElementaryTypeName",
                        "src": "1912:7:2"
                      }
                    ],
                    "id": 195,
                    "name": "VariableDeclaration",
                    "src": "1912:16:2"
                  }
                ],
                "id": 196,
                "name": "ParameterList",
                "src": "1911:18:2"
              }
            ],
            "id": 197,
            "name": "EventDefinition",
            "src": "1890:40:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "PostProject"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when a Project is posted \n @param _customerAddress is the address of Project"
                },
                "id": 198,
                "name": "StructuredDocumentation",
                "src": "1936:103:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 202,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 199,
                        "name": "ElementaryTypeName",
                        "src": "2062:7:2"
                      }
                    ],
                    "id": 200,
                    "name": "VariableDeclaration",
                    "src": "2062:24:2"
                  }
                ],
                "id": 201,
                "name": "ParameterList",
                "src": "2061:26:2"
              }
            ],
            "id": 202,
            "name": "EventDefinition",
            "src": "2044:44:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "chooseTheProject"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when Engineer add a price for working on project \n @param  _customerAddress is the address of Project\n @param price is the price that customer send to Engineer"
                },
                "id": 203,
                "name": "StructuredDocumentation",
                "src": "2094:193:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 209,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 204,
                        "name": "ElementaryTypeName",
                        "src": "2315:7:2"
                      }
                    ],
                    "id": 205,
                    "name": "VariableDeclaration",
                    "src": "2315:24:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "price",
                      "scope": 209,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 206,
                        "name": "ElementaryTypeName",
                        "src": "2342:4:2"
                      }
                    ],
                    "id": 207,
                    "name": "VariableDeclaration",
                    "src": "2342:10:2"
                  }
                ],
                "id": 208,
                "name": "ParameterList",
                "src": "2314:39:2"
              }
            ],
            "id": 209,
            "name": "EventDefinition",
            "src": "2292:62:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "413bf38f",
              "mutability": "mutable",
              "name": "offers",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.offer)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.offer)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 210,
                    "name": "ElementaryTypeName",
                    "src": "2453:7:2"
                  },
                  {
                    "attributes": {
                      "name": "offer",
                      "referencedDeclaration": 187,
                      "type": "struct SmallBusiness.offer"
                    },
                    "id": 211,
                    "name": "UserDefinedTypeName",
                    "src": "2464:5:2"
                  }
                ],
                "id": 212,
                "name": "Mapping",
                "src": "2444:26:2"
              }
            ],
            "id": 213,
            "name": "VariableDeclaration",
            "src": "2444:40:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "336989ae",
              "mutability": "mutable",
              "name": "customers",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.customer)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.customer)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 214,
                    "name": "ElementaryTypeName",
                    "src": "2567:7:2"
                  },
                  {
                    "attributes": {
                      "name": "customer",
                      "referencedDeclaration": 158,
                      "type": "struct SmallBusiness.customer"
                    },
                    "id": 215,
                    "name": "UserDefinedTypeName",
                    "src": "2578:8:2"
                  }
                ],
                "id": 216,
                "name": "Mapping",
                "src": "2559:28:2"
              }
            ],
            "id": 217,
            "name": "VariableDeclaration",
            "src": "2559:45:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "03bc470d",
              "mutability": "mutable",
              "name": "Engineers",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.Engineer)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.Engineer)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 218,
                    "name": "ElementaryTypeName",
                    "src": "2688:7:2"
                  },
                  {
                    "attributes": {
                      "name": "Engineer",
                      "referencedDeclaration": 165,
                      "type": "struct SmallBusiness.Engineer"
                    },
                    "id": 219,
                    "name": "UserDefinedTypeName",
                    "src": "2698:8:2"
                  }
                ],
                "id": 220,
                "name": "Mapping",
                "src": "2679:28:2"
              }
            ],
            "id": 221,
            "name": "VariableDeclaration",
            "src": "2679:45:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "840e78fd",
              "mutability": "mutable",
              "name": "projects",
              "scope": 903,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.Project)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.Project)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 222,
                    "name": "ElementaryTypeName",
                    "src": "2808:7:2"
                  },
                  {
                    "attributes": {
                      "name": "Project",
                      "referencedDeclaration": 180,
                      "type": "struct SmallBusiness.Project"
                    },
                    "id": 223,
                    "name": "UserDefinedTypeName",
                    "src": "2819:7:2"
                  }
                ],
                "id": 224,
                "name": "Mapping",
                "src": "2799:28:2"
              }
            ],
            "id": 225,
            "name": "VariableDeclaration",
            "src": "2799:44:2"
          },
          {
            "attributes": {
              "name": "verifyCaller",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 238,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 226,
                        "name": "ElementaryTypeName",
                        "src": "3000:7:2"
                      }
                    ],
                    "id": 227,
                    "name": "VariableDeclaration",
                    "src": "3000:16:2"
                  }
                ],
                "id": 228,
                "name": "ParameterList",
                "src": "2999:18:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 229,
                            "name": "Identifier",
                            "src": "3025:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 230,
                                    "name": "Identifier",
                                    "src": "3034:3:2"
                                  }
                                ],
                                "id": 231,
                                "name": "MemberAccess",
                                "src": "3034:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 227,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 232,
                                "name": "Identifier",
                                "src": "3048:8:2"
                              }
                            ],
                            "id": 233,
                            "name": "BinaryOperation",
                            "src": "3034:22:2"
                          }
                        ],
                        "id": 234,
                        "name": "FunctionCall",
                        "src": "3025:32:2"
                      }
                    ],
                    "id": 235,
                    "name": "ExpressionStatement",
                    "src": "3025:32:2"
                  },
                  {
                    "id": 236,
                    "name": "PlaceholderStatement",
                    "src": "3064:1:2"
                  }
                ],
                "id": 237,
                "name": "Block",
                "src": "3018:54:2"
              }
            ],
            "id": 238,
            "name": "ModifierDefinition",
            "src": "2977:95:2"
          },
          {
            "attributes": {
              "name": "isOwner",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 239,
                "name": "ParameterList",
                "src": "3099:2:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                                  "typeString": "literal_string \"Caller is not owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 240,
                            "name": "Identifier",
                            "src": "3109:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 139,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 241,
                                "name": "Identifier",
                                "src": "3118:5:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 242,
                                    "name": "Identifier",
                                    "src": "3127:3:2"
                                  }
                                ],
                                "id": 243,
                                "name": "MemberAccess",
                                "src": "3127:10:2"
                              }
                            ],
                            "id": 244,
                            "name": "BinaryOperation",
                            "src": "3118:19:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "43616c6c6572206973206e6f74206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Caller is not owner\"",
                              "value": "Caller is not owner"
                            },
                            "id": 245,
                            "name": "Literal",
                            "src": "3143:21:2"
                          }
                        ],
                        "id": 246,
                        "name": "FunctionCall",
                        "src": "3109:56:2"
                      }
                    ],
                    "id": 247,
                    "name": "ExpressionStatement",
                    "src": "3109:56:2"
                  },
                  {
                    "id": 248,
                    "name": "PlaceholderStatement",
                    "src": "3172:1:2"
                  }
                ],
                "id": 249,
                "name": "Block",
                "src": "3102:78:2"
              }
            ],
            "id": 250,
            "name": "ModifierDefinition",
            "src": "3082:98:2"
          },
          {
            "attributes": {
              "name": "isCustomer",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 266,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 251,
                        "name": "ElementaryTypeName",
                        "src": "3207:7:2"
                      }
                    ],
                    "id": 252,
                    "name": "VariableDeclaration",
                    "src": "3207:16:2"
                  }
                ],
                "id": 253,
                "name": "ParameterList",
                "src": "3206:18:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1a21e2482cff0d301e9da97ad72957e24a75f61fa8acf94fa888828436a186b5",
                                  "typeString": "literal_string \"this account is not Customer.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 254,
                            "name": "Identifier",
                            "src": "3234:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "customerAddress",
                                  "referencedDeclaration": 155,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.customer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 217,
                                          "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                          "value": "customers"
                                        },
                                        "id": 255,
                                        "name": "Identifier",
                                        "src": "3243:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 252,
                                          "type": "address",
                                          "value": "_address"
                                        },
                                        "id": 256,
                                        "name": "Identifier",
                                        "src": "3253:8:2"
                                      }
                                    ],
                                    "id": 257,
                                    "name": "IndexAccess",
                                    "src": "3243:19:2"
                                  }
                                ],
                                "id": 258,
                                "name": "MemberAccess",
                                "src": "3243:35:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 252,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 259,
                                "name": "Identifier",
                                "src": "3282:8:2"
                              }
                            ],
                            "id": 260,
                            "name": "BinaryOperation",
                            "src": "3243:47:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206163636f756e74206973206e6f7420437573746f6d65722e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this account is not Customer.\"",
                              "value": "this account is not Customer."
                            },
                            "id": 261,
                            "name": "Literal",
                            "src": "3300:31:2"
                          }
                        ],
                        "id": 262,
                        "name": "FunctionCall",
                        "src": "3234:98:2"
                      }
                    ],
                    "id": 263,
                    "name": "ExpressionStatement",
                    "src": "3234:98:2"
                  },
                  {
                    "id": 264,
                    "name": "PlaceholderStatement",
                    "src": "3342:1:2"
                  }
                ],
                "id": 265,
                "name": "Block",
                "src": "3224:126:2"
              }
            ],
            "id": 266,
            "name": "ModifierDefinition",
            "src": "3187:163:2"
          },
          {
            "attributes": {
              "name": "isEngineer",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_Engineer",
                      "scope": 282,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 267,
                        "name": "ElementaryTypeName",
                        "src": "3380:7:2"
                      }
                    ],
                    "id": 268,
                    "name": "VariableDeclaration",
                    "src": "3380:17:2"
                  }
                ],
                "id": 269,
                "name": "ParameterList",
                "src": "3379:19:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b617bd5ec7b3a83916097c4d59b438904070317990f7dfa8afc1b45629c54eb5",
                                  "typeString": "literal_string \"caller isnot Engineer\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 270,
                            "name": "Identifier",
                            "src": "3408:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "engineerAddress",
                                  "referencedDeclaration": 160,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 221,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 271,
                                        "name": "Identifier",
                                        "src": "3416:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 268,
                                          "type": "address",
                                          "value": "_Engineer"
                                        },
                                        "id": 272,
                                        "name": "Identifier",
                                        "src": "3426:9:2"
                                      }
                                    ],
                                    "id": 273,
                                    "name": "IndexAccess",
                                    "src": "3416:20:2"
                                  }
                                ],
                                "id": 274,
                                "name": "MemberAccess",
                                "src": "3416:36:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 268,
                                  "type": "address",
                                  "value": "_Engineer"
                                },
                                "id": 275,
                                "name": "Identifier",
                                "src": "3455:9:2"
                              }
                            ],
                            "id": 276,
                            "name": "BinaryOperation",
                            "src": "3416:48:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "63616c6c65722069736e6f7420456e67696e656572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"caller isnot Engineer\"",
                              "value": "caller isnot Engineer"
                            },
                            "id": 277,
                            "name": "Literal",
                            "src": "3474:23:2"
                          }
                        ],
                        "id": 278,
                        "name": "FunctionCall",
                        "src": "3408:90:2"
                      }
                    ],
                    "id": 279,
                    "name": "ExpressionStatement",
                    "src": "3408:90:2"
                  },
                  {
                    "id": 280,
                    "name": "PlaceholderStatement",
                    "src": "3508:1:2"
                  }
                ],
                "id": 281,
                "name": "Block",
                "src": "3398:118:2"
              }
            ],
            "id": 282,
            "name": "ModifierDefinition",
            "src": "3360:156:2"
          },
          {
            "attributes": {
              "name": "forSell",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 312,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 283,
                        "name": "ElementaryTypeName",
                        "src": "3539:7:2"
                      }
                    ],
                    "id": 284,
                    "name": "VariableDeclaration",
                    "src": "3539:24:2"
                  }
                ],
                "id": 285,
                "name": "ParameterList",
                "src": "3538:26:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                                  "typeString": "literal_string \"The project is not nothing\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 286,
                            "name": "Identifier",
                            "src": "3573:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 167,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 225,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 287,
                                        "name": "Identifier",
                                        "src": "3581:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 284,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 288,
                                        "name": "Identifier",
                                        "src": "3590:16:2"
                                      }
                                    ],
                                    "id": 289,
                                    "name": "IndexAccess",
                                    "src": "3581:26:2"
                                  }
                                ],
                                "id": 290,
                                "name": "MemberAccess",
                                "src": "3581:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 291,
                                        "name": "ElementaryTypeName",
                                        "src": "3617:7:2"
                                      }
                                    ],
                                    "id": 292,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3617:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 293,
                                    "name": "Literal",
                                    "src": "3625:1:2"
                                  }
                                ],
                                "id": 294,
                                "name": "FunctionCall",
                                "src": "3617:10:2"
                              }
                            ],
                            "id": 295,
                            "name": "BinaryOperation",
                            "src": "3581:46:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"The project is not nothing\"",
                              "value": "The project is not nothing"
                            },
                            "id": 296,
                            "name": "Literal",
                            "src": "3637:28:2"
                          }
                        ],
                        "id": 297,
                        "name": "FunctionCall",
                        "src": "3573:93:2"
                      }
                    ],
                    "id": 298,
                    "name": "ExpressionStatement",
                    "src": "3573:93:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_48ad3683c258fceaa1c0746045810997cbaeec0c2f0385833b5777bb1d4628af",
                                  "typeString": "literal_string \"the project has already done..\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 299,
                            "name": "Identifier",
                            "src": "3675:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$153",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 171,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 225,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 300,
                                        "name": "Identifier",
                                        "src": "3683:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 284,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 301,
                                        "name": "Identifier",
                                        "src": "3692:16:2"
                                      }
                                    ],
                                    "id": 302,
                                    "name": "IndexAccess",
                                    "src": "3683:26:2"
                                  }
                                ],
                                "id": 303,
                                "name": "MemberAccess",
                                "src": "3683:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "forSell",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 153,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 304,
                                    "name": "Identifier",
                                    "src": "3719:5:2"
                                  }
                                ],
                                "id": 305,
                                "name": "MemberAccess",
                                "src": "3719:13:2"
                              }
                            ],
                            "id": 306,
                            "name": "BinaryOperation",
                            "src": "3683:49:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468652070726f6a6563742068617320616c726561647920646f6e652e2e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"the project has already done..\"",
                              "value": "the project has already done.."
                            },
                            "id": 307,
                            "name": "Literal",
                            "src": "3741:32:2"
                          }
                        ],
                        "id": 308,
                        "name": "FunctionCall",
                        "src": "3675:99:2"
                      }
                    ],
                    "id": 309,
                    "name": "ExpressionStatement",
                    "src": "3675:99:2"
                  },
                  {
                    "id": 310,
                    "name": "PlaceholderStatement",
                    "src": "3783:1:2"
                  }
                ],
                "id": 311,
                "name": "Block",
                "src": "3564:227:2"
              }
            ],
            "id": 312,
            "name": "ModifierDefinition",
            "src": "3522:269:2"
          },
          {
            "attributes": {
              "name": "Finish",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 342,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 313,
                        "name": "ElementaryTypeName",
                        "src": "3817:7:2"
                      }
                    ],
                    "id": 314,
                    "name": "VariableDeclaration",
                    "src": "3817:24:2"
                  }
                ],
                "id": 315,
                "name": "ParameterList",
                "src": "3816:26:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                                  "typeString": "literal_string \"The project is not nothing\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 316,
                            "name": "Identifier",
                            "src": "3851:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 167,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 225,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 317,
                                        "name": "Identifier",
                                        "src": "3859:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 314,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 318,
                                        "name": "Identifier",
                                        "src": "3868:16:2"
                                      }
                                    ],
                                    "id": 319,
                                    "name": "IndexAccess",
                                    "src": "3859:26:2"
                                  }
                                ],
                                "id": 320,
                                "name": "MemberAccess",
                                "src": "3859:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 321,
                                        "name": "ElementaryTypeName",
                                        "src": "3895:7:2"
                                      }
                                    ],
                                    "id": 322,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3895:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 323,
                                    "name": "Literal",
                                    "src": "3903:1:2"
                                  }
                                ],
                                "id": 324,
                                "name": "FunctionCall",
                                "src": "3895:10:2"
                              }
                            ],
                            "id": 325,
                            "name": "BinaryOperation",
                            "src": "3859:46:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"The project is not nothing\"",
                              "value": "The project is not nothing"
                            },
                            "id": 326,
                            "name": "Literal",
                            "src": "3915:28:2"
                          }
                        ],
                        "id": 327,
                        "name": "FunctionCall",
                        "src": "3851:93:2"
                      }
                    ],
                    "id": 328,
                    "name": "ExpressionStatement",
                    "src": "3851:93:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fa3b5d1a096a651bb96b440efaaa92c2d2829964a79312f48fac5eece5415c6b",
                                  "typeString": "literal_string \"this Project has already been for sell\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 329,
                            "name": "Identifier",
                            "src": "3953:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$153",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 171,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 225,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 330,
                                        "name": "Identifier",
                                        "src": "3961:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 314,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 331,
                                        "name": "Identifier",
                                        "src": "3970:16:2"
                                      }
                                    ],
                                    "id": 332,
                                    "name": "IndexAccess",
                                    "src": "3961:26:2"
                                  }
                                ],
                                "id": 333,
                                "name": "MemberAccess",
                                "src": "3961:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Finish",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 153,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 334,
                                    "name": "Identifier",
                                    "src": "3997:5:2"
                                  }
                                ],
                                "id": 335,
                                "name": "MemberAccess",
                                "src": "3997:12:2"
                              }
                            ],
                            "id": 336,
                            "name": "BinaryOperation",
                            "src": "3961:48:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "746869732050726f6a6563742068617320616c7265616479206265656e20666f722073656c6c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this Project has already been for sell\"",
                              "value": "this Project has already been for sell"
                            },
                            "id": 337,
                            "name": "Literal",
                            "src": "4018:40:2"
                          }
                        ],
                        "id": 338,
                        "name": "FunctionCall",
                        "src": "3953:106:2"
                      }
                    ],
                    "id": 339,
                    "name": "ExpressionStatement",
                    "src": "3953:106:2"
                  },
                  {
                    "id": 340,
                    "name": "PlaceholderStatement",
                    "src": "4068:1:2"
                  }
                ],
                "id": 341,
                "name": "Block",
                "src": "3842:234:2"
              }
            ],
            "id": 342,
            "name": "ModifierDefinition",
            "src": "3801:275:2"
          },
          {
            "attributes": {
              "name": "verifyState",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 343,
                "name": "ParameterList",
                "src": "4101:2:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_820863d9742345c6cc06a0445b8222575c685dbc118061dc54d90ac56718eed3",
                                  "typeString": "literal_string \"this account already set value\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 344,
                            "name": "Identifier",
                            "src": "4113:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$153",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 164,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 221,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 345,
                                        "name": "Identifier",
                                        "src": "4121:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 346,
                                            "name": "Identifier",
                                            "src": "4131:3:2"
                                          }
                                        ],
                                        "id": 347,
                                        "name": "MemberAccess",
                                        "src": "4131:10:2"
                                      }
                                    ],
                                    "id": 348,
                                    "name": "IndexAccess",
                                    "src": "4121:21:2"
                                  }
                                ],
                                "id": 349,
                                "name": "MemberAccess",
                                "src": "4121:27:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "primsion",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 153,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 350,
                                    "name": "Identifier",
                                    "src": "4152:5:2"
                                  }
                                ],
                                "id": 351,
                                "name": "MemberAccess",
                                "src": "4152:14:2"
                              }
                            ],
                            "id": 352,
                            "name": "BinaryOperation",
                            "src": "4121:45:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206163636f756e7420616c7265616479207365742076616c7565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this account already set value\"",
                              "value": "this account already set value"
                            },
                            "id": 353,
                            "name": "Literal",
                            "src": "4176:32:2"
                          }
                        ],
                        "id": 354,
                        "name": "FunctionCall",
                        "src": "4113:96:2"
                      }
                    ],
                    "id": 355,
                    "name": "ExpressionStatement",
                    "src": "4113:96:2"
                  },
                  {
                    "id": 356,
                    "name": "PlaceholderStatement",
                    "src": "4219:1:2"
                  }
                ],
                "id": 357,
                "name": "Block",
                "src": "4103:124:2"
              }
            ],
            "id": 358,
            "name": "ModifierDefinition",
            "src": "4081:146:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 359,
                "name": "ParameterList",
                "src": "4244:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 360,
                "name": "ParameterList",
                "src": "4247:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 139,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 361,
                            "name": "Identifier",
                            "src": "4257:5:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 362,
                                "name": "Identifier",
                                "src": "4265:3:2"
                              }
                            ],
                            "id": 363,
                            "name": "MemberAccess",
                            "src": "4265:10:2"
                          }
                        ],
                        "id": 364,
                        "name": "Assignment",
                        "src": "4257:18:2"
                      }
                    ],
                    "id": 365,
                    "name": "ExpressionStatement",
                    "src": "4257:18:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 141,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 366,
                            "name": "Identifier",
                            "src": "4285:4:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 367,
                            "name": "Literal",
                            "src": "4290:1:2"
                          }
                        ],
                        "id": 368,
                        "name": "Assignment",
                        "src": "4285:6:2"
                      }
                    ],
                    "id": 369,
                    "name": "ExpressionStatement",
                    "src": "4285:6:2"
                  }
                ],
                "id": 370,
                "name": "Block",
                "src": "4247:51:2"
              }
            ],
            "id": 371,
            "name": "FunctionDefinition",
            "src": "4233:65:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                12
              ],
              "functionSelector": "88bc8150",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addCustomer",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 377,
                "name": "OverrideSpecifier",
                "src": "4502:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "customerAddress",
                      "scope": 416,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 372,
                        "name": "ElementaryTypeName",
                        "src": "4427:15:2"
                      }
                    ],
                    "id": 373,
                    "name": "VariableDeclaration",
                    "src": "4427:31:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "yourName",
                      "scope": 416,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 374,
                        "name": "ElementaryTypeName",
                        "src": "4466:6:2"
                      }
                    ],
                    "id": 375,
                    "name": "VariableDeclaration",
                    "src": "4466:22:2"
                  }
                ],
                "id": 376,
                "name": "ParameterList",
                "src": "4426:63:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 416,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 378,
                        "name": "ElementaryTypeName",
                        "src": "4524:4:2"
                      }
                    ],
                    "id": 379,
                    "name": "VariableDeclaration",
                    "src": "4524:4:2"
                  }
                ],
                "id": 380,
                "name": "ParameterList",
                "src": "4523:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cea4d4fa71e7864649d08ce6f83215c1bf137c9a1ac10210dfa3a69790c872cd",
                                  "typeString": "literal_string \"this address is already registred\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 381,
                            "name": "Identifier",
                            "src": "4540:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "customerAddress",
                                  "referencedDeclaration": 155,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.customer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 217,
                                          "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                          "value": "customers"
                                        },
                                        "id": 382,
                                        "name": "Identifier",
                                        "src": "4548:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 373,
                                          "type": "address payable",
                                          "value": "customerAddress"
                                        },
                                        "id": 383,
                                        "name": "Identifier",
                                        "src": "4558:15:2"
                                      }
                                    ],
                                    "id": 384,
                                    "name": "IndexAccess",
                                    "src": "4548:26:2"
                                  }
                                ],
                                "id": 385,
                                "name": "MemberAccess",
                                "src": "4548:42:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 386,
                                        "name": "ElementaryTypeName",
                                        "src": "4594:7:2"
                                      }
                                    ],
                                    "id": 387,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4594:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 388,
                                    "name": "Literal",
                                    "src": "4602:1:2"
                                  }
                                ],
                                "id": 389,
                                "name": "FunctionCall",
                                "src": "4594:10:2"
                              }
                            ],
                            "id": 390,
                            "name": "BinaryOperation",
                            "src": "4548:56:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206164647265737320697320616c726561647920726567697374726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this address is already registred\"",
                              "value": "this address is already registred"
                            },
                            "id": 391,
                            "name": "Literal",
                            "src": "4614:35:2"
                          }
                        ],
                        "id": 392,
                        "name": "FunctionCall",
                        "src": "4540:110:2"
                      }
                    ],
                    "id": 393,
                    "name": "ExpressionStatement",
                    "src": "4540:110:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.customer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.customer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 217,
                                  "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                  "value": "customers"
                                },
                                "id": 394,
                                "name": "Identifier",
                                "src": "4660:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 373,
                                  "type": "address payable",
                                  "value": "customerAddress"
                                },
                                "id": 395,
                                "name": "Identifier",
                                "src": "4670:15:2"
                              }
                            ],
                            "id": 396,
                            "name": "IndexAccess",
                            "src": "4660:26:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "customerAddress",
                                "Name"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.customer memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 158,
                                  "type": "type(struct SmallBusiness.customer storage pointer)",
                                  "value": "customer"
                                },
                                "id": 397,
                                "name": "Identifier",
                                "src": "4687:8:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 373,
                                  "type": "address payable",
                                  "value": "customerAddress"
                                },
                                "id": 398,
                                "name": "Identifier",
                                "src": "4728:15:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 375,
                                  "type": "string memory",
                                  "value": "yourName"
                                },
                                "id": 399,
                                "name": "Identifier",
                                "src": "4764:8:2"
                              }
                            ],
                            "id": 400,
                            "name": "FunctionCall",
                            "src": "4687:96:2"
                          }
                        ],
                        "id": 401,
                        "name": "Assignment",
                        "src": "4660:123:2"
                      }
                    ],
                    "id": 402,
                    "name": "ExpressionStatement",
                    "src": "4660:123:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 192,
                              "type": "function (address)",
                              "value": "logAddCustomer"
                            },
                            "id": 403,
                            "name": "Identifier",
                            "src": "4798:14:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 373,
                              "type": "address payable",
                              "value": "customerAddress"
                            },
                            "id": 404,
                            "name": "Identifier",
                            "src": "4813:15:2"
                          }
                        ],
                        "id": 405,
                        "name": "FunctionCall",
                        "src": "4798:31:2"
                      }
                    ],
                    "id": 406,
                    "name": "EmitStatement",
                    "src": "4793:36:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 141,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 407,
                            "name": "Identifier",
                            "src": "4839:4:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 141,
                                  "type": "uint256",
                                  "value": "deal"
                                },
                                "id": 408,
                                "name": "Identifier",
                                "src": "4846:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 409,
                                "name": "Literal",
                                "src": "4853:1:2"
                              }
                            ],
                            "id": 410,
                            "name": "BinaryOperation",
                            "src": "4846:8:2"
                          }
                        ],
                        "id": 411,
                        "name": "Assignment",
                        "src": "4839:15:2"
                      }
                    ],
                    "id": 412,
                    "name": "ExpressionStatement",
                    "src": "4839:15:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 380
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 413,
                        "name": "Literal",
                        "src": "4871:4:2"
                      }
                    ],
                    "id": 414,
                    "name": "Return",
                    "src": "4864:11:2"
                  }
                ],
                "id": 415,
                "name": "Block",
                "src": "4530:352:2"
              }
            ],
            "id": 416,
            "name": "FunctionDefinition",
            "src": "4406:476:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                22
              ],
              "functionSelector": "a871ca5d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addEngineer",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 422,
                "name": "OverrideSpecifier",
                "src": "5080:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_engineerAddress",
                      "scope": 463,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 417,
                        "name": "ElementaryTypeName",
                        "src": "5015:15:2"
                      }
                    ],
                    "id": 418,
                    "name": "VariableDeclaration",
                    "src": "5015:32:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_yourName",
                      "scope": 463,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 419,
                        "name": "ElementaryTypeName",
                        "src": "5048:6:2"
                      }
                    ],
                    "id": 420,
                    "name": "VariableDeclaration",
                    "src": "5048:23:2"
                  }
                ],
                "id": 421,
                "name": "ParameterList",
                "src": "5014:58:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 463,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 423,
                        "name": "ElementaryTypeName",
                        "src": "5097:4:2"
                      }
                    ],
                    "id": 424,
                    "name": "VariableDeclaration",
                    "src": "5097:4:2"
                  }
                ],
                "id": 425,
                "name": "ParameterList",
                "src": "5096:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2f02aa03166603fb488119f4e88edc7ae399185607c207053aa2dc7b20d01dbf",
                                  "typeString": "literal_string \"this address already registred.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 426,
                            "name": "Identifier",
                            "src": "5112:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "engineerAddress",
                                  "referencedDeclaration": 160,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 221,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 427,
                                        "name": "Identifier",
                                        "src": "5120:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 418,
                                          "type": "address payable",
                                          "value": "_engineerAddress"
                                        },
                                        "id": 428,
                                        "name": "Identifier",
                                        "src": "5130:16:2"
                                      }
                                    ],
                                    "id": 429,
                                    "name": "IndexAccess",
                                    "src": "5120:27:2"
                                  }
                                ],
                                "id": 430,
                                "name": "MemberAccess",
                                "src": "5120:43:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 431,
                                        "name": "ElementaryTypeName",
                                        "src": "5167:7:2"
                                      }
                                    ],
                                    "id": 432,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5167:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 433,
                                    "name": "Literal",
                                    "src": "5175:1:2"
                                  }
                                ],
                                "id": 434,
                                "name": "FunctionCall",
                                "src": "5167:10:2"
                              }
                            ],
                            "id": 435,
                            "name": "BinaryOperation",
                            "src": "5120:57:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206164647265737320616c7265616479207265676973747265642e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this address already registred.\"",
                              "value": "this address already registred."
                            },
                            "id": 436,
                            "name": "Literal",
                            "src": "5187:33:2"
                          }
                        ],
                        "id": 437,
                        "name": "FunctionCall",
                        "src": "5112:109:2"
                      }
                    ],
                    "id": 438,
                    "name": "ExpressionStatement",
                    "src": "5112:109:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.Engineer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.Engineer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 221,
                                  "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                  "value": "Engineers"
                                },
                                "id": 439,
                                "name": "Identifier",
                                "src": "5231:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 418,
                                  "type": "address payable",
                                  "value": "_engineerAddress"
                                },
                                "id": 440,
                                "name": "Identifier",
                                "src": "5241:16:2"
                              }
                            ],
                            "id": 441,
                            "name": "IndexAccess",
                            "src": "5231:27:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "engineerAddress",
                                "Name",
                                "state"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.Engineer memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_State_$153",
                                      "typeString": "enum SmallBusiness.State"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 165,
                                  "type": "type(struct SmallBusiness.Engineer storage pointer)",
                                  "value": "Engineer"
                                },
                                "id": 442,
                                "name": "Identifier",
                                "src": "5261:8:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 418,
                                  "type": "address payable",
                                  "value": "_engineerAddress"
                                },
                                "id": 443,
                                "name": "Identifier",
                                "src": "5302:16:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 420,
                                  "type": "string memory",
                                  "value": "_yourName"
                                },
                                "id": 444,
                                "name": "Identifier",
                                "src": "5338:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "primsion",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 153,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 445,
                                    "name": "Identifier",
                                    "src": "5368:5:2"
                                  }
                                ],
                                "id": 446,
                                "name": "MemberAccess",
                                "src": "5368:14:2"
                              }
                            ],
                            "id": 447,
                            "name": "FunctionCall",
                            "src": "5261:132:2"
                          }
                        ],
                        "id": 448,
                        "name": "Assignment",
                        "src": "5231:162:2"
                      }
                    ],
                    "id": 449,
                    "name": "ExpressionStatement",
                    "src": "5231:162:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 197,
                              "type": "function (address)",
                              "value": "logAddEngineers"
                            },
                            "id": 450,
                            "name": "Identifier",
                            "src": "5404:15:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 418,
                              "type": "address payable",
                              "value": "_engineerAddress"
                            },
                            "id": 451,
                            "name": "Identifier",
                            "src": "5420:16:2"
                          }
                        ],
                        "id": 452,
                        "name": "FunctionCall",
                        "src": "5404:33:2"
                      }
                    ],
                    "id": 453,
                    "name": "EmitStatement",
                    "src": "5399:38:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 141,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 454,
                            "name": "Identifier",
                            "src": "5444:4:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 141,
                                  "type": "uint256",
                                  "value": "deal"
                                },
                                "id": 455,
                                "name": "Identifier",
                                "src": "5451:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 456,
                                "name": "Literal",
                                "src": "5458:1:2"
                              }
                            ],
                            "id": 457,
                            "name": "BinaryOperation",
                            "src": "5451:8:2"
                          }
                        ],
                        "id": 458,
                        "name": "Assignment",
                        "src": "5444:15:2"
                      }
                    ],
                    "id": 459,
                    "name": "ExpressionStatement",
                    "src": "5444:15:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 425
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 460,
                        "name": "Literal",
                        "src": "5472:4:2"
                      }
                    ],
                    "id": 461,
                    "name": "Return",
                    "src": "5465:11:2"
                  }
                ],
                "id": 462,
                "name": "Block",
                "src": "5102:382:2"
              }
            ],
            "id": 463,
            "name": "FunctionDefinition",
            "src": "4994:490:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                38
              ],
              "functionSelector": "d026c425",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addProject",
              "scope": 903,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "add Project`s id in to mapping\ncheck the state of project should be forSell\ncheck the modifier is customer to call that function \nthe customer should call that function"
                },
                "id": 464,
                "name": "StructuredDocumentation",
                "src": "5494:192:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 476,
                "name": "OverrideSpecifier",
                "src": "5836:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "Name",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 465,
                        "name": "ElementaryTypeName",
                        "src": "5716:6:2"
                      }
                    ],
                    "id": 466,
                    "name": "VariableDeclaration",
                    "src": "5716:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "skills",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 467,
                        "name": "ElementaryTypeName",
                        "src": "5740:6:2"
                      }
                    ],
                    "id": 468,
                    "name": "VariableDeclaration",
                    "src": "5740:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "information",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 469,
                        "name": "ElementaryTypeName",
                        "src": "5761:6:2"
                      }
                    ],
                    "id": 470,
                    "name": "VariableDeclaration",
                    "src": "5761:25:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "averageOfprice",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 471,
                        "name": "ElementaryTypeName",
                        "src": "5792:4:2"
                      }
                    ],
                    "id": 472,
                    "name": "VariableDeclaration",
                    "src": "5792:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_id",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 473,
                        "name": "ElementaryTypeName",
                        "src": "5814:4:2"
                      }
                    ],
                    "id": 474,
                    "name": "VariableDeclaration",
                    "src": "5814:8:2"
                  }
                ],
                "id": 475,
                "name": "ParameterList",
                "src": "5715:108:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 481,
                        "name": "ElementaryTypeName",
                        "src": "5896:4:2"
                      }
                    ],
                    "id": 482,
                    "name": "VariableDeclaration",
                    "src": "5896:4:2"
                  }
                ],
                "id": 483,
                "name": "ParameterList",
                "src": "5895:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 238,
                      "type": "modifier (address)",
                      "value": "verifyCaller"
                    },
                    "id": 477,
                    "name": "Identifier",
                    "src": "5858:12:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 478,
                        "name": "Identifier",
                        "src": "5871:3:2"
                      }
                    ],
                    "id": 479,
                    "name": "MemberAccess",
                    "src": "5871:10:2"
                  }
                ],
                "id": 480,
                "name": "ModifierInvocation",
                "src": "5858:24:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da9b8ddb4929eb16dec1eb567070cd3dbd4e024729714b8dd3a83a48d9db14c1",
                                  "typeString": "literal_string \"this project already is exist.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 484,
                            "name": "Identifier",
                            "src": "5911:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 167,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 225,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 485,
                                        "name": "Identifier",
                                        "src": "5919:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 486,
                                            "name": "Identifier",
                                            "src": "5928:3:2"
                                          }
                                        ],
                                        "id": 487,
                                        "name": "MemberAccess",
                                        "src": "5928:10:2"
                                      }
                                    ],
                                    "id": 488,
                                    "name": "IndexAccess",
                                    "src": "5919:20:2"
                                  }
                                ],
                                "id": 489,
                                "name": "MemberAccess",
                                "src": "5919:26:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 490,
                                        "name": "ElementaryTypeName",
                                        "src": "5949:7:2"
                                      }
                                    ],
                                    "id": 491,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5949:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 492,
                                    "name": "Literal",
                                    "src": "5957:1:2"
                                  }
                                ],
                                "id": 493,
                                "name": "FunctionCall",
                                "src": "5949:10:2"
                              }
                            ],
                            "id": 494,
                            "name": "BinaryOperation",
                            "src": "5919:40:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "746869732070726f6a65637420616c72656164792069732065786973742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this project already is exist.\"",
                              "value": "this project already is exist."
                            },
                            "id": 495,
                            "name": "Literal",
                            "src": "5970:32:2"
                          }
                        ],
                        "id": 496,
                        "name": "FunctionCall",
                        "src": "5911:92:2"
                      }
                    ],
                    "id": 497,
                    "name": "ExpressionStatement",
                    "src": "5911:92:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7f626ceb74ac075baf1a9780a1808432c8439e35ad343e8b0986b7bae7fa9ec1",
                                  "typeString": "literal_string \"the value you send should be less than your current average.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 498,
                            "name": "Identifier",
                            "src": "6013:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 499,
                                    "name": "Identifier",
                                    "src": "6021:3:2"
                                  }
                                ],
                                "id": 500,
                                "name": "MemberAccess",
                                "src": "6021:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 472,
                                  "type": "uint256",
                                  "value": "averageOfprice"
                                },
                                "id": 501,
                                "name": "Identifier",
                                "src": "6032:14:2"
                              }
                            ],
                            "id": 502,
                            "name": "BinaryOperation",
                            "src": "6021:25:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"the value you send should be less than your current average.\"",
                              "value": "the value you send should be less than your current average."
                            },
                            "id": 503,
                            "name": "Literal",
                            "src": "6056:62:2"
                          }
                        ],
                        "id": 504,
                        "name": "FunctionCall",
                        "src": "6013:106:2"
                      }
                    ],
                    "id": 505,
                    "name": "ExpressionStatement",
                    "src": "6013:106:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.Project storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 225,
                                  "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                  "value": "projects"
                                },
                                "id": 506,
                                "name": "Identifier",
                                "src": "6129:8:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 507,
                                    "name": "Identifier",
                                    "src": "6138:3:2"
                                  }
                                ],
                                "id": 508,
                                "name": "MemberAccess",
                                "src": "6138:10:2"
                              }
                            ],
                            "id": 509,
                            "name": "IndexAccess",
                            "src": "6129:20:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "owner",
                                "Name",
                                "skills",
                                "information",
                                "averageOfprice",
                                "state",
                                "id"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.Project memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_State_$153",
                                      "typeString": "enum SmallBusiness.State"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 180,
                                  "type": "type(struct SmallBusiness.Project storage pointer)",
                                  "value": "Project"
                                },
                                "id": 510,
                                "name": "Identifier",
                                "src": "6152:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 511,
                                    "name": "Identifier",
                                    "src": "6180:3:2"
                                  }
                                ],
                                "id": 512,
                                "name": "MemberAccess",
                                "src": "6180:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 466,
                                  "type": "string memory",
                                  "value": "Name"
                                },
                                "id": 513,
                                "name": "Identifier",
                                "src": "6209:4:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 468,
                                  "type": "string memory",
                                  "value": "skills"
                                },
                                "id": 514,
                                "name": "Identifier",
                                "src": "6234:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 470,
                                  "type": "string memory",
                                  "value": "information"
                                },
                                "id": 515,
                                "name": "Identifier",
                                "src": "6266:11:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 472,
                                  "type": "uint256",
                                  "value": "averageOfprice"
                                },
                                "id": 516,
                                "name": "Identifier",
                                "src": "6306:14:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "forSell",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 153,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 517,
                                    "name": "Identifier",
                                    "src": "6340:5:2"
                                  }
                                ],
                                "id": 518,
                                "name": "MemberAccess",
                                "src": "6340:13:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 474,
                                  "type": "uint256",
                                  "value": "_id"
                                },
                                "id": 519,
                                "name": "Identifier",
                                "src": "6371:3:2"
                              }
                            ],
                            "id": 520,
                            "name": "FunctionCall",
                            "src": "6152:250:2"
                          }
                        ],
                        "id": 521,
                        "name": "Assignment",
                        "src": "6129:273:2"
                      }
                    ],
                    "id": 522,
                    "name": "ExpressionStatement",
                    "src": "6129:273:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 141,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 523,
                            "name": "Identifier",
                            "src": "6412:4:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 141,
                                  "type": "uint256",
                                  "value": "deal"
                                },
                                "id": 524,
                                "name": "Identifier",
                                "src": "6419:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 525,
                                "name": "Literal",
                                "src": "6426:1:2"
                              }
                            ],
                            "id": 526,
                            "name": "BinaryOperation",
                            "src": "6419:8:2"
                          }
                        ],
                        "id": 527,
                        "name": "Assignment",
                        "src": "6412:15:2"
                      }
                    ],
                    "id": 528,
                    "name": "ExpressionStatement",
                    "src": "6412:15:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 202,
                              "type": "function (address)",
                              "value": "PostProject"
                            },
                            "id": 529,
                            "name": "Identifier",
                            "src": "6442:11:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 530,
                                "name": "Identifier",
                                "src": "6454:3:2"
                              }
                            ],
                            "id": 531,
                            "name": "MemberAccess",
                            "src": "6454:10:2"
                          }
                        ],
                        "id": 532,
                        "name": "FunctionCall",
                        "src": "6442:23:2"
                      }
                    ],
                    "id": 533,
                    "name": "EmitStatement",
                    "src": "6437:28:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 483
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 534,
                        "name": "Literal",
                        "src": "6482:4:2"
                      }
                    ],
                    "id": 535,
                    "name": "Return",
                    "src": "6475:11:2"
                  }
                ],
                "id": 536,
                "name": "Block",
                "src": "5901:592:2"
              }
            ],
            "id": 537,
            "name": "FunctionDefinition",
            "src": "5696:797:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                82
              ],
              "functionSelector": "78e4f934",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "chooseToWork",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 547,
                "name": "OverrideSpecifier",
                "src": "6607:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 589,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 538,
                        "name": "ElementaryTypeName",
                        "src": "6521:7:2"
                      }
                    ],
                    "id": 539,
                    "name": "VariableDeclaration",
                    "src": "6521:24:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "day",
                      "scope": 589,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 540,
                        "name": "ElementaryTypeName",
                        "src": "6546:7:2"
                      }
                    ],
                    "id": 541,
                    "name": "VariableDeclaration",
                    "src": "6546:11:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "price",
                      "scope": 589,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 542,
                        "name": "ElementaryTypeName",
                        "src": "6559:4:2"
                      }
                    ],
                    "id": 543,
                    "name": "VariableDeclaration",
                    "src": "6559:10:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "information",
                      "scope": 589,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 544,
                        "name": "ElementaryTypeName",
                        "src": "6572:6:2"
                      }
                    ],
                    "id": 545,
                    "name": "VariableDeclaration",
                    "src": "6572:25:2"
                  }
                ],
                "id": 546,
                "name": "ParameterList",
                "src": "6520:78:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 589,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 557,
                        "name": "ElementaryTypeName",
                        "src": "6694:6:2"
                      }
                    ],
                    "id": 558,
                    "name": "VariableDeclaration",
                    "src": "6694:13:2"
                  }
                ],
                "id": 559,
                "name": "ParameterList",
                "src": "6693:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 282,
                      "type": "modifier (address)",
                      "value": "isEngineer"
                    },
                    "id": 548,
                    "name": "Identifier",
                    "src": "6616:10:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 549,
                        "name": "Identifier",
                        "src": "6627:3:2"
                      }
                    ],
                    "id": 550,
                    "name": "MemberAccess",
                    "src": "6627:10:2"
                  }
                ],
                "id": 551,
                "name": "ModifierInvocation",
                "src": "6616:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 312,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 552,
                    "name": "Identifier",
                    "src": "6641:7:2"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 539,
                      "type": "address",
                      "value": "_customerAddress"
                    },
                    "id": 553,
                    "name": "Identifier",
                    "src": "6649:16:2"
                  }
                ],
                "id": 554,
                "name": "ModifierInvocation",
                "src": "6641:25:2"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 358,
                      "type": "modifier ()",
                      "value": "verifyState"
                    },
                    "id": 555,
                    "name": "Identifier",
                    "src": "6667:11:2"
                  }
                ],
                "id": 556,
                "name": "ModifierInvocation",
                "src": "6667:13:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.offer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.offer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 213,
                                  "type": "mapping(address => struct SmallBusiness.offer storage ref)",
                                  "value": "offers"
                                },
                                "id": 560,
                                "name": "Identifier",
                                "src": "6718:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 561,
                                    "name": "Identifier",
                                    "src": "6725:3:2"
                                  }
                                ],
                                "id": 562,
                                "name": "MemberAccess",
                                "src": "6725:10:2"
                              }
                            ],
                            "id": 563,
                            "name": "IndexAccess",
                            "src": "6718:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "price",
                                "day",
                                "moreInform"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.offer memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 187,
                                  "type": "type(struct SmallBusiness.offer storage pointer)",
                                  "value": "offer"
                                },
                                "id": 564,
                                "name": "Identifier",
                                "src": "6739:5:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 543,
                                  "type": "uint256",
                                  "value": "price"
                                },
                                "id": 565,
                                "name": "Identifier",
                                "src": "6766:5:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 541,
                                  "type": "uint256",
                                  "value": "day"
                                },
                                "id": 566,
                                "name": "Identifier",
                                "src": "6789:3:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 545,
                                  "type": "string memory",
                                  "value": "information"
                                },
                                "id": 567,
                                "name": "Identifier",
                                "src": "6817:11:2"
                              }
                            ],
                            "id": 568,
                            "name": "FunctionCall",
                            "src": "6739:100:2"
                          }
                        ],
                        "id": 569,
                        "name": "Assignment",
                        "src": "6718:121:2"
                      }
                    ],
                    "id": 570,
                    "name": "ExpressionStatement",
                    "src": "6718:121:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$153",
                            "typeString": "enum SmallBusiness.State"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "state",
                              "referencedDeclaration": 164,
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SmallBusiness.Engineer storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 221,
                                      "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                      "value": "Engineers"
                                    },
                                    "id": 571,
                                    "name": "Identifier",
                                    "src": "6849:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 572,
                                        "name": "Identifier",
                                        "src": "6859:3:2"
                                      }
                                    ],
                                    "id": 573,
                                    "name": "MemberAccess",
                                    "src": "6859:10:2"
                                  }
                                ],
                                "id": 574,
                                "name": "IndexAccess",
                                "src": "6849:21:2"
                              }
                            ],
                            "id": 575,
                            "name": "MemberAccess",
                            "src": "6849:27:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "unprmision",
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 153,
                                  "type": "type(enum SmallBusiness.State)",
                                  "value": "State"
                                },
                                "id": 576,
                                "name": "Identifier",
                                "src": "6880:5:2"
                              }
                            ],
                            "id": 577,
                            "name": "MemberAccess",
                            "src": "6880:16:2"
                          }
                        ],
                        "id": 578,
                        "name": "BinaryOperation",
                        "src": "6849:47:2"
                      }
                    ],
                    "id": 579,
                    "name": "ExpressionStatement",
                    "src": "6849:47:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 209,
                              "type": "function (address,uint256)",
                              "value": "chooseTheProject"
                            },
                            "id": 580,
                            "name": "Identifier",
                            "src": "6911:16:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 581,
                                "name": "Identifier",
                                "src": "6928:3:2"
                              }
                            ],
                            "id": 582,
                            "name": "MemberAccess",
                            "src": "6928:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 543,
                              "type": "uint256",
                              "value": "price"
                            },
                            "id": 583,
                            "name": "Identifier",
                            "src": "6939:5:2"
                          }
                        ],
                        "id": 584,
                        "name": "FunctionCall",
                        "src": "6911:34:2"
                      }
                    ],
                    "id": 585,
                    "name": "EmitStatement",
                    "src": "6906:39:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 559
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7365742076616c7565206f6e2070726f6a656374",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"set value on project\"",
                          "value": "set value on project"
                        },
                        "id": 586,
                        "name": "Literal",
                        "src": "6962:22:2"
                      }
                    ],
                    "id": 587,
                    "name": "Return",
                    "src": "6955:29:2"
                  }
                ],
                "id": 588,
                "name": "Block",
                "src": "6708:283:2"
              }
            ],
            "id": 589,
            "name": "FunctionDefinition",
            "src": "6499:492:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                90
              ],
              "functionSelector": "3d8f426d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "accepteCustomer",
              "scope": 903,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 593,
                "name": "OverrideSpecifier",
                "src": "7071:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_engineerAddress",
                      "scope": 671,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 590,
                        "name": "ElementaryTypeName",
                        "src": "7022:15:2"
                      }
                    ],
                    "id": 591,
                    "name": "VariableDeclaration",
                    "src": "7022:32:2"
                  }
                ],
                "id": 592,
                "name": "ParameterList",
                "src": "7021:34:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 671,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 602,
                        "name": "ElementaryTypeName",
                        "src": "7131:4:2"
                      }
                    ],
                    "id": 603,
                    "name": "VariableDeclaration",
                    "src": "7131:4:2"
                  }
                ],
                "id": 604,
                "name": "ParameterList",
                "src": "7130:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 266,
                      "type": "modifier (address)",
                      "value": "isCustomer"
                    },
                    "id": 594,
                    "name": "Identifier",
                    "src": "7080:10:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 595,
                        "name": "Identifier",
                        "src": "7091:3:2"
                      }
                    ],
                    "id": 596,
                    "name": "MemberAccess",
                    "src": "7091:10:2"
                  }
                ],
                "id": 597,
                "name": "ModifierInvocation",
                "src": "7080:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 312,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 598,
                    "name": "Identifier",
                    "src": "7103:7:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 599,
                        "name": "Identifier",
                        "src": "7111:3:2"
                      }
                    ],
                    "id": 600,
                    "name": "MemberAccess",
                    "src": "7111:10:2"
                  }
                ],
                "id": 601,
                "name": "ModifierInvocation",
                "src": "7103:19:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a3a575e1768ec30c540f377844b39a498d9b629f44612d5fc9eadb9e3d723a59",
                                  "typeString": "literal_string \"this account is not an engineer\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 605,
                            "name": "Identifier",
                            "src": "7147:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "engineerAddress",
                                  "referencedDeclaration": 160,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 221,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 606,
                                        "name": "Identifier",
                                        "src": "7155:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 591,
                                          "type": "address payable",
                                          "value": "_engineerAddress"
                                        },
                                        "id": 607,
                                        "name": "Identifier",
                                        "src": "7165:16:2"
                                      }
                                    ],
                                    "id": 608,
                                    "name": "IndexAccess",
                                    "src": "7155:27:2"
                                  }
                                ],
                                "id": 609,
                                "name": "MemberAccess",
                                "src": "7155:43:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 591,
                                  "type": "address payable",
                                  "value": "_engineerAddress"
                                },
                                "id": 610,
                                "name": "Identifier",
                                "src": "7202:16:2"
                              }
                            ],
                            "id": 611,
                            "name": "BinaryOperation",
                            "src": "7155:63:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206163636f756e74206973206e6f7420616e20656e67696e656572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this account is not an engineer\"",
                              "value": "this account is not an engineer"
                            },
                            "id": 612,
                            "name": "Literal",
                            "src": "7233:33:2"
                          }
                        ],
                        "id": 613,
                        "name": "FunctionCall",
                        "src": "7147:120:2"
                      }
                    ],
                    "id": 614,
                    "name": "ExpressionStatement",
                    "src": "7147:120:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e0de5b351d6557eb48e363761cf6090d3026541521fe1e3365103722e0582e41",
                                  "typeString": "literal_string \"this customer is not Exist.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 615,
                            "name": "Identifier",
                            "src": "7277:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "customerAddress",
                                  "referencedDeclaration": 155,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.customer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 217,
                                          "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                          "value": "customers"
                                        },
                                        "id": 616,
                                        "name": "Identifier",
                                        "src": "7285:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 617,
                                            "name": "Identifier",
                                            "src": "7295:3:2"
                                          }
                                        ],
                                        "id": 618,
                                        "name": "MemberAccess",
                                        "src": "7295:10:2"
                                      }
                                    ],
                                    "id": 619,
                                    "name": "IndexAccess",
                                    "src": "7285:21:2"
                                  }
                                ],
                                "id": 620,
                                "name": "MemberAccess",
                                "src": "7285:37:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 621,
                                    "name": "Identifier",
                                    "src": "7326:3:2"
                                  }
                                ],
                                "id": 622,
                                "name": "MemberAccess",
                                "src": "7326:10:2"
                              }
                            ],
                            "id": 623,
                            "name": "BinaryOperation",
                            "src": "7285:51:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468697320637573746f6d6572206973206e6f742045786973742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this customer is not Exist.\"",
                              "value": "this customer is not Exist."
                            },
                            "id": 624,
                            "name": "Literal",
                            "src": "7351:29:2"
                          }
                        ],
                        "id": 625,
                        "name": "FunctionCall",
                        "src": "7277:104:2"
                      }
                    ],
                    "id": 626,
                    "name": "ExpressionStatement",
                    "src": "7277:104:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        628
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 670,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 180,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 627,
                            "name": "UserDefinedTypeName",
                            "src": "7391:7:2"
                          }
                        ],
                        "id": 628,
                        "name": "VariableDeclaration",
                        "src": "7391:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 629,
                            "name": "Identifier",
                            "src": "7411:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 630,
                                "name": "Identifier",
                                "src": "7420:3:2"
                              }
                            ],
                            "id": 631,
                            "name": "MemberAccess",
                            "src": "7420:10:2"
                          }
                        ],
                        "id": 632,
                        "name": "IndexAccess",
                        "src": "7411:20:2"
                      }
                    ],
                    "id": 633,
                    "name": "VariableDeclarationStatement",
                    "src": "7391:40:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum SmallBusiness.State"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 171,
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 628,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 634,
                                "name": "Identifier",
                                "src": "7441:1:2"
                              }
                            ],
                            "id": 636,
                            "name": "MemberAccess",
                            "src": "7441:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Finish",
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 153,
                                  "type": "type(enum SmallBusiness.State)",
                                  "value": "State"
                                },
                                "id": 637,
                                "name": "Identifier",
                                "src": "7451:5:2"
                              }
                            ],
                            "id": 638,
                            "name": "MemberAccess",
                            "src": "7451:12:2"
                          }
                        ],
                        "id": 639,
                        "name": "Assignment",
                        "src": "7441:22:2"
                      }
                    ],
                    "id": 640,
                    "name": "ExpressionStatement",
                    "src": "7441:22:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        642
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "o",
                          "scope": 670,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.offer",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "offer",
                              "referencedDeclaration": 187,
                              "type": "struct SmallBusiness.offer"
                            },
                            "id": 641,
                            "name": "UserDefinedTypeName",
                            "src": "7473:5:2"
                          }
                        ],
                        "id": 642,
                        "name": "VariableDeclaration",
                        "src": "7473:15:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.offer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 213,
                              "type": "mapping(address => struct SmallBusiness.offer storage ref)",
                              "value": "offers"
                            },
                            "id": 643,
                            "name": "Identifier",
                            "src": "7491:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 591,
                              "type": "address payable",
                              "value": "_engineerAddress"
                            },
                            "id": 644,
                            "name": "Identifier",
                            "src": "7498:16:2"
                          }
                        ],
                        "id": 645,
                        "name": "IndexAccess",
                        "src": "7491:24:2"
                      }
                    ],
                    "id": 646,
                    "name": "VariableDeclarationStatement",
                    "src": "7473:42:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        648
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "e",
                          "scope": 670,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Engineer",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Engineer",
                              "referencedDeclaration": 165,
                              "type": "struct SmallBusiness.Engineer"
                            },
                            "id": 647,
                            "name": "UserDefinedTypeName",
                            "src": "7525:8:2"
                          }
                        ],
                        "id": 648,
                        "name": "VariableDeclaration",
                        "src": "7525:18:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Engineer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 221,
                              "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                              "value": "Engineers"
                            },
                            "id": 649,
                            "name": "Identifier",
                            "src": "7546:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 591,
                              "type": "address payable",
                              "value": "_engineerAddress"
                            },
                            "id": 650,
                            "name": "Identifier",
                            "src": "7556:16:2"
                          }
                        ],
                        "id": 651,
                        "name": "IndexAccess",
                        "src": "7546:27:2"
                      }
                    ],
                    "id": 652,
                    "name": "VariableDeclarationStatement",
                    "src": "7525:48:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        654
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "to",
                          "scope": 670,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address payable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "payable",
                              "type": "address payable"
                            },
                            "id": 653,
                            "name": "ElementaryTypeName",
                            "src": "7583:15:2"
                          }
                        ],
                        "id": 654,
                        "name": "VariableDeclaration",
                        "src": "7583:18:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "engineerAddress",
                          "referencedDeclaration": 160,
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 648,
                              "type": "struct SmallBusiness.Engineer storage pointer",
                              "value": "e"
                            },
                            "id": 655,
                            "name": "Identifier",
                            "src": "7604:1:2"
                          }
                        ],
                        "id": 656,
                        "name": "MemberAccess",
                        "src": "7604:17:2"
                      }
                    ],
                    "id": 657,
                    "name": "VariableDeclarationStatement",
                    "src": "7583:38:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 654,
                                  "type": "address payable",
                                  "value": "to"
                                },
                                "id": 658,
                                "name": "Identifier",
                                "src": "7632:2:2"
                              }
                            ],
                            "id": 660,
                            "name": "MemberAccess",
                            "src": "7632:11:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "price",
                                  "referencedDeclaration": 182,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 642,
                                      "type": "struct SmallBusiness.offer storage pointer",
                                      "value": "o"
                                    },
                                    "id": 661,
                                    "name": "Identifier",
                                    "src": "7644:1:2"
                                  }
                                ],
                                "id": 662,
                                "name": "MemberAccess",
                                "src": "7644:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": "ether",
                                      "token": "number",
                                      "type": "int_const 1000000000000000000",
                                      "value": "1"
                                    },
                                    "id": 663,
                                    "name": "Literal",
                                    "src": "7654:7:2"
                                  }
                                ],
                                "id": 664,
                                "name": "TupleExpression",
                                "src": "7653:9:2"
                              }
                            ],
                            "id": 665,
                            "name": "BinaryOperation",
                            "src": "7644:18:2"
                          }
                        ],
                        "id": 666,
                        "name": "FunctionCall",
                        "src": "7632:31:2"
                      }
                    ],
                    "id": 667,
                    "name": "ExpressionStatement",
                    "src": "7632:31:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 604
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 668,
                        "name": "Literal",
                        "src": "7680:4:2"
                      }
                    ],
                    "id": 669,
                    "name": "Return",
                    "src": "7673:11:2"
                  }
                ],
                "id": 670,
                "name": "Block",
                "src": "7137:554:2"
              }
            ],
            "id": 671,
            "name": "FunctionDefinition",
            "src": "6997:694:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                52
              ],
              "functionSelector": "aede6098",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "EditProject",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 681,
                "name": "OverrideSpecifier",
                "src": "7834:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_name",
                      "scope": 748,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 672,
                        "name": "ElementaryTypeName",
                        "src": "7718:6:2"
                      }
                    ],
                    "id": 673,
                    "name": "VariableDeclaration",
                    "src": "7718:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_skills",
                      "scope": 748,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 674,
                        "name": "ElementaryTypeName",
                        "src": "7738:6:2"
                      }
                    ],
                    "id": 675,
                    "name": "VariableDeclaration",
                    "src": "7738:21:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_information",
                      "scope": 748,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 676,
                        "name": "ElementaryTypeName",
                        "src": "7769:6:2"
                      }
                    ],
                    "id": 677,
                    "name": "VariableDeclaration",
                    "src": "7769:26:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_averageOfprice",
                      "scope": 748,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 678,
                        "name": "ElementaryTypeName",
                        "src": "7796:4:2"
                      }
                    ],
                    "id": 679,
                    "name": "VariableDeclaration",
                    "src": "7796:20:2"
                  }
                ],
                "id": 680,
                "name": "ParameterList",
                "src": "7717:101:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 748,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 690,
                        "name": "ElementaryTypeName",
                        "src": "7921:6:2"
                      }
                    ],
                    "id": 691,
                    "name": "VariableDeclaration",
                    "src": "7921:13:2"
                  }
                ],
                "id": 692,
                "name": "ParameterList",
                "src": "7920:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 238,
                      "type": "modifier (address)",
                      "value": "verifyCaller"
                    },
                    "id": 682,
                    "name": "Identifier",
                    "src": "7851:12:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 683,
                        "name": "Identifier",
                        "src": "7864:3:2"
                      }
                    ],
                    "id": 684,
                    "name": "MemberAccess",
                    "src": "7864:10:2"
                  }
                ],
                "id": 685,
                "name": "ModifierInvocation",
                "src": "7851:24:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 312,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 686,
                    "name": "Identifier",
                    "src": "7884:7:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 687,
                        "name": "Identifier",
                        "src": "7892:3:2"
                      }
                    ],
                    "id": 688,
                    "name": "MemberAccess",
                    "src": "7892:10:2"
                  }
                ],
                "id": 689,
                "name": "ModifierInvocation",
                "src": "7884:19:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        694
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 747,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 180,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 693,
                            "name": "UserDefinedTypeName",
                            "src": "7965:7:2"
                          }
                        ],
                        "id": 694,
                        "name": "VariableDeclaration",
                        "src": "7965:16:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 695,
                            "name": "Identifier",
                            "src": "7984:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 696,
                                "name": "Identifier",
                                "src": "7993:3:2"
                              }
                            ],
                            "id": 697,
                            "name": "MemberAccess",
                            "src": "7993:10:2"
                          }
                        ],
                        "id": 698,
                        "name": "IndexAccess",
                        "src": "7984:20:2"
                      }
                    ],
                    "id": 699,
                    "name": "VariableDeclarationStatement",
                    "src": "7965:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "owner",
                              "referencedDeclaration": 167,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 700,
                                "name": "Identifier",
                                "src": "8017:1:2"
                              }
                            ],
                            "id": 702,
                            "name": "MemberAccess",
                            "src": "8017:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 703,
                                "name": "Identifier",
                                "src": "8027:3:2"
                              }
                            ],
                            "id": 704,
                            "name": "MemberAccess",
                            "src": "8027:10:2"
                          }
                        ],
                        "id": 705,
                        "name": "Assignment",
                        "src": "8017:20:2"
                      }
                    ],
                    "id": 706,
                    "name": "ExpressionStatement",
                    "src": "8017:20:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Name",
                              "referencedDeclaration": 169,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 707,
                                "name": "Identifier",
                                "src": "8050:1:2"
                              }
                            ],
                            "id": 709,
                            "name": "MemberAccess",
                            "src": "8050:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 673,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 710,
                            "name": "Identifier",
                            "src": "8059:5:2"
                          }
                        ],
                        "id": 711,
                        "name": "Assignment",
                        "src": "8050:14:2"
                      }
                    ],
                    "id": 712,
                    "name": "ExpressionStatement",
                    "src": "8050:14:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum SmallBusiness.State"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 171,
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 713,
                                "name": "Identifier",
                                "src": "8077:1:2"
                              }
                            ],
                            "id": 715,
                            "name": "MemberAccess",
                            "src": "8077:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "forSell",
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 153,
                                  "type": "type(enum SmallBusiness.State)",
                                  "value": "State"
                                },
                                "id": 716,
                                "name": "Identifier",
                                "src": "8086:5:2"
                              }
                            ],
                            "id": 717,
                            "name": "MemberAccess",
                            "src": "8086:13:2"
                          }
                        ],
                        "id": 718,
                        "name": "Assignment",
                        "src": "8077:22:2"
                      }
                    ],
                    "id": 719,
                    "name": "ExpressionStatement",
                    "src": "8077:22:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "skills",
                              "referencedDeclaration": 173,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 720,
                                "name": "Identifier",
                                "src": "8112:1:2"
                              }
                            ],
                            "id": 722,
                            "name": "MemberAccess",
                            "src": "8112:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 675,
                              "type": "string memory",
                              "value": "_skills"
                            },
                            "id": 723,
                            "name": "Identifier",
                            "src": "8122:7:2"
                          }
                        ],
                        "id": 724,
                        "name": "Assignment",
                        "src": "8112:17:2"
                      }
                    ],
                    "id": 725,
                    "name": "ExpressionStatement",
                    "src": "8112:17:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "information",
                              "referencedDeclaration": 175,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 726,
                                "name": "Identifier",
                                "src": "8142:1:2"
                              }
                            ],
                            "id": 728,
                            "name": "MemberAccess",
                            "src": "8142:13:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 677,
                              "type": "string memory",
                              "value": "_information"
                            },
                            "id": 729,
                            "name": "Identifier",
                            "src": "8158:12:2"
                          }
                        ],
                        "id": 730,
                        "name": "Assignment",
                        "src": "8142:28:2"
                      }
                    ],
                    "id": 731,
                    "name": "ExpressionStatement",
                    "src": "8142:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "averageOfprice",
                              "referencedDeclaration": 177,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 732,
                                "name": "Identifier",
                                "src": "8183:1:2"
                              }
                            ],
                            "id": 734,
                            "name": "MemberAccess",
                            "src": "8183:17:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 679,
                              "type": "uint256",
                              "value": "_averageOfprice"
                            },
                            "id": 735,
                            "name": "Identifier",
                            "src": "8203:15:2"
                          }
                        ],
                        "id": 736,
                        "name": "Assignment",
                        "src": "8183:35:2"
                      }
                    ],
                    "id": 737,
                    "name": "ExpressionStatement",
                    "src": "8183:35:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "id",
                              "referencedDeclaration": 179,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 738,
                                "name": "Identifier",
                                "src": "8231:1:2"
                              }
                            ],
                            "id": 740,
                            "name": "MemberAccess",
                            "src": "8231:4:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "id",
                              "referencedDeclaration": 179,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 694,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 741,
                                "name": "Identifier",
                                "src": "8238:1:2"
                              }
                            ],
                            "id": 742,
                            "name": "MemberAccess",
                            "src": "8238:4:2"
                          }
                        ],
                        "id": 743,
                        "name": "Assignment",
                        "src": "8231:11:2"
                      }
                    ],
                    "id": 744,
                    "name": "ExpressionStatement",
                    "src": "8231:11:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 692
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7468652070726f6a6563742077617320757064617465",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"the project was update\"",
                          "value": "the project was update"
                        },
                        "id": 745,
                        "name": "Literal",
                        "src": "8293:24:2"
                      }
                    ],
                    "id": 746,
                    "name": "Return",
                    "src": "8286:31:2"
                  }
                ],
                "id": 747,
                "name": "Block",
                "src": "7947:378:2"
              }
            ],
            "id": 748,
            "name": "FunctionDefinition",
            "src": "7697:628:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                68
              ],
              "functionSelector": "f9870705",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "getProject",
              "scope": 903,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 752,
                "name": "OverrideSpecifier",
                "src": "8419:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 790,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 749,
                        "name": "ElementaryTypeName",
                        "src": "8381:7:2"
                      }
                    ],
                    "id": 750,
                    "name": "VariableDeclaration",
                    "src": "8381:24:2"
                  }
                ],
                "id": 751,
                "name": "ParameterList",
                "src": "8380:26:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "Name",
                      "scope": 790,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 760,
                        "name": "ElementaryTypeName",
                        "src": "8502:6:2"
                      }
                    ],
                    "id": 761,
                    "name": "VariableDeclaration",
                    "src": "8502:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "skills",
                      "scope": 790,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 762,
                        "name": "ElementaryTypeName",
                        "src": "8521:6:2"
                      }
                    ],
                    "id": 763,
                    "name": "VariableDeclaration",
                    "src": "8521:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "information",
                      "scope": 790,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 764,
                        "name": "ElementaryTypeName",
                        "src": "8547:6:2"
                      }
                    ],
                    "id": 765,
                    "name": "VariableDeclaration",
                    "src": "8547:25:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "averageOfprice",
                      "scope": 790,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 766,
                        "name": "ElementaryTypeName",
                        "src": "8573:4:2"
                      }
                    ],
                    "id": 767,
                    "name": "VariableDeclaration",
                    "src": "8573:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 790,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 768,
                        "name": "ElementaryTypeName",
                        "src": "8595:4:2"
                      }
                    ],
                    "id": 769,
                    "name": "VariableDeclaration",
                    "src": "8595:7:2"
                  }
                ],
                "id": 770,
                "name": "ParameterList",
                "src": "8501:103:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 238,
                      "type": "modifier (address)",
                      "value": "verifyCaller"
                    },
                    "id": 753,
                    "name": "Identifier",
                    "src": "8433:12:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 754,
                        "name": "Identifier",
                        "src": "8446:3:2"
                      }
                    ],
                    "id": 755,
                    "name": "MemberAccess",
                    "src": "8446:10:2"
                  }
                ],
                "id": 756,
                "name": "ModifierInvocation",
                "src": "8433:24:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 312,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 757,
                    "name": "Identifier",
                    "src": "8463:7:2"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 750,
                      "type": "address",
                      "value": "_customerAddress"
                    },
                    "id": 758,
                    "name": "Identifier",
                    "src": "8471:16:2"
                  }
                ],
                "id": 759,
                "name": "ModifierInvocation",
                "src": "8463:25:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        772
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 789,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 180,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 771,
                            "name": "UserDefinedTypeName",
                            "src": "8622:7:2"
                          }
                        ],
                        "id": 772,
                        "name": "VariableDeclaration",
                        "src": "8622:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 773,
                            "name": "Identifier",
                            "src": "8642:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 750,
                              "type": "address",
                              "value": "_customerAddress"
                            },
                            "id": 774,
                            "name": "Identifier",
                            "src": "8651:16:2"
                          }
                        ],
                        "id": 775,
                        "name": "IndexAccess",
                        "src": "8642:26:2"
                      }
                    ],
                    "id": 776,
                    "name": "VariableDeclarationStatement",
                    "src": "8622:46:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 770
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string storage ref,string storage ref,string storage ref,uint256,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "Name",
                              "referencedDeclaration": 169,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 772,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 777,
                                "name": "Identifier",
                                "src": "8686:1:2"
                              }
                            ],
                            "id": 778,
                            "name": "MemberAccess",
                            "src": "8686:6:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "skills",
                              "referencedDeclaration": 173,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 772,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 779,
                                "name": "Identifier",
                                "src": "8693:1:2"
                              }
                            ],
                            "id": 780,
                            "name": "MemberAccess",
                            "src": "8693:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "information",
                              "referencedDeclaration": 175,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 772,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 781,
                                "name": "Identifier",
                                "src": "8702:1:2"
                              }
                            ],
                            "id": 782,
                            "name": "MemberAccess",
                            "src": "8702:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "averageOfprice",
                              "referencedDeclaration": 177,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 772,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 783,
                                "name": "Identifier",
                                "src": "8716:1:2"
                              }
                            ],
                            "id": 784,
                            "name": "MemberAccess",
                            "src": "8716:16:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "id",
                              "referencedDeclaration": 179,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 772,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 785,
                                "name": "Identifier",
                                "src": "8736:1:2"
                              }
                            ],
                            "id": 786,
                            "name": "MemberAccess",
                            "src": "8736:4:2"
                          }
                        ],
                        "id": 787,
                        "name": "TupleExpression",
                        "src": "8685:57:2"
                      }
                    ],
                    "id": 788,
                    "name": "Return",
                    "src": "8678:64:2"
                  }
                ],
                "id": 789,
                "name": "Block",
                "src": "8612:138:2"
              }
            ],
            "id": 790,
            "name": "FunctionDefinition",
            "src": "8361:389:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                98
              ],
              "functionSelector": "2200e21e",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "deleteProject",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 794,
                "name": "OverrideSpecifier",
                "src": "8873:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 844,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 791,
                        "name": "ElementaryTypeName",
                        "src": "8835:7:2"
                      }
                    ],
                    "id": 792,
                    "name": "VariableDeclaration",
                    "src": "8835:24:2"
                  }
                ],
                "id": 793,
                "name": "ParameterList",
                "src": "8834:26:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 844,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 799,
                        "name": "ElementaryTypeName",
                        "src": "8923:6:2"
                      }
                    ],
                    "id": 800,
                    "name": "VariableDeclaration",
                    "src": "8923:13:2"
                  }
                ],
                "id": 801,
                "name": "ParameterList",
                "src": "8922:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 266,
                      "type": "modifier (address)",
                      "value": "isCustomer"
                    },
                    "id": 795,
                    "name": "Identifier",
                    "src": "8887:10:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 796,
                        "name": "Identifier",
                        "src": "8898:3:2"
                      }
                    ],
                    "id": 797,
                    "name": "MemberAccess",
                    "src": "8898:10:2"
                  }
                ],
                "id": 798,
                "name": "ModifierInvocation",
                "src": "8887:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        803
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 843,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 180,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 802,
                            "name": "UserDefinedTypeName",
                            "src": "8948:7:2"
                          }
                        ],
                        "id": 803,
                        "name": "VariableDeclaration",
                        "src": "8948:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 804,
                            "name": "Identifier",
                            "src": "8968:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 792,
                              "type": "address",
                              "value": "_customerAddress"
                            },
                            "id": 805,
                            "name": "Identifier",
                            "src": "8977:16:2"
                          }
                        ],
                        "id": 806,
                        "name": "IndexAccess",
                        "src": "8968:26:2"
                      }
                    ],
                    "id": 807,
                    "name": "VariableDeclarationStatement",
                    "src": "8948:46:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "owner",
                              "referencedDeclaration": 167,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 803,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 808,
                                "name": "Identifier",
                                "src": "9004:1:2"
                              }
                            ],
                            "id": 810,
                            "name": "MemberAccess",
                            "src": "9004:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 811,
                                    "name": "ElementaryTypeName",
                                    "src": "9013:7:2"
                                  }
                                ],
                                "id": 812,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9013:7:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 813,
                                "name": "Literal",
                                "src": "9021:1:2"
                              }
                            ],
                            "id": 814,
                            "name": "FunctionCall",
                            "src": "9013:10:2"
                          }
                        ],
                        "id": 815,
                        "name": "Assignment",
                        "src": "9004:19:2"
                      }
                    ],
                    "id": 816,
                    "name": "ExpressionStatement",
                    "src": "9004:19:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Name",
                              "referencedDeclaration": 169,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 803,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 817,
                                "name": "Identifier",
                                "src": "9033:1:2"
                              }
                            ],
                            "id": 819,
                            "name": "MemberAccess",
                            "src": "9033:6:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" \"",
                              "value": " "
                            },
                            "id": 820,
                            "name": "Literal",
                            "src": "9042:3:2"
                          }
                        ],
                        "id": 821,
                        "name": "Assignment",
                        "src": "9033:12:2"
                      }
                    ],
                    "id": 822,
                    "name": "ExpressionStatement",
                    "src": "9033:12:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "skills",
                              "referencedDeclaration": 173,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 803,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 823,
                                "name": "Identifier",
                                "src": "9055:1:2"
                              }
                            ],
                            "id": 825,
                            "name": "MemberAccess",
                            "src": "9055:8:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" \"",
                              "value": " "
                            },
                            "id": 826,
                            "name": "Literal",
                            "src": "9066:3:2"
                          }
                        ],
                        "id": 827,
                        "name": "Assignment",
                        "src": "9055:14:2"
                      }
                    ],
                    "id": 828,
                    "name": "ExpressionStatement",
                    "src": "9055:14:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "information",
                              "referencedDeclaration": 175,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 803,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 829,
                                "name": "Identifier",
                                "src": "9079:1:2"
                              }
                            ],
                            "id": 831,
                            "name": "MemberAccess",
                            "src": "9079:13:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" \"",
                              "value": " "
                            },
                            "id": 832,
                            "name": "Literal",
                            "src": "9095:3:2"
                          }
                        ],
                        "id": 833,
                        "name": "Assignment",
                        "src": "9079:19:2"
                      }
                    ],
                    "id": 834,
                    "name": "ExpressionStatement",
                    "src": "9079:19:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "averageOfprice",
                              "referencedDeclaration": 177,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 803,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 835,
                                "name": "Identifier",
                                "src": "9108:1:2"
                              }
                            ],
                            "id": 837,
                            "name": "MemberAccess",
                            "src": "9108:16:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 838,
                            "name": "Literal",
                            "src": "9127:1:2"
                          }
                        ],
                        "id": 839,
                        "name": "Assignment",
                        "src": "9108:20:2"
                      }
                    ],
                    "id": 840,
                    "name": "ExpressionStatement",
                    "src": "9108:20:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 801
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7468652070726f6a656374207761732064656c657465",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"the project was delete\"",
                          "value": "the project was delete"
                        },
                        "id": 841,
                        "name": "Literal",
                        "src": "9155:24:2"
                      }
                    ],
                    "id": 842,
                    "name": "Return",
                    "src": "9148:31:2"
                  }
                ],
                "id": 843,
                "name": "Block",
                "src": "8937:255:2"
              }
            ],
            "id": 844,
            "name": "FunctionDefinition",
            "src": "8812:380:2"
          },
          {
            "attributes": {
              "functionSelector": "cea1a67a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_passthevalue",
              "scope": 903,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 845,
                "name": "ParameterList",
                "src": "9443:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 890,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 846,
                        "name": "ElementaryTypeName",
                        "src": "9461:6:2"
                      }
                    ],
                    "id": 847,
                    "name": "VariableDeclaration",
                    "src": "9461:13:2"
                  }
                ],
                "id": 848,
                "name": "ParameterList",
                "src": "9460:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        850
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 889,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 180,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 849,
                            "name": "UserDefinedTypeName",
                            "src": "9485:7:2"
                          }
                        ],
                        "id": 850,
                        "name": "VariableDeclaration",
                        "src": "9485:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 851,
                            "name": "Identifier",
                            "src": "9505:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 852,
                                "name": "Identifier",
                                "src": "9514:3:2"
                              }
                            ],
                            "id": 853,
                            "name": "MemberAccess",
                            "src": "9514:10:2"
                          }
                        ],
                        "id": 854,
                        "name": "IndexAccess",
                        "src": "9505:20:2"
                      }
                    ],
                    "id": 855,
                    "name": "VariableDeclarationStatement",
                    "src": "9485:40:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e20e1579c4ddb32976d29829607291694b179a8b9e0b6062028dba84be81b25d",
                                  "typeString": "literal_string \"this project was not finish\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 856,
                            "name": "Identifier",
                            "src": "9535:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$153",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 171,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 850,
                                      "type": "struct SmallBusiness.Project storage pointer",
                                      "value": "p"
                                    },
                                    "id": 857,
                                    "name": "Identifier",
                                    "src": "9543:1:2"
                                  }
                                ],
                                "id": 858,
                                "name": "MemberAccess",
                                "src": "9543:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Finish",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 153,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 859,
                                    "name": "Identifier",
                                    "src": "9554:5:2"
                                  }
                                ],
                                "id": 860,
                                "name": "MemberAccess",
                                "src": "9554:12:2"
                              }
                            ],
                            "id": 861,
                            "name": "BinaryOperation",
                            "src": "9543:23:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "746869732070726f6a65637420776173206e6f742066696e697368",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this project was not finish\"",
                              "value": "this project was not finish"
                            },
                            "id": 862,
                            "name": "Literal",
                            "src": "9568:29:2"
                          }
                        ],
                        "id": 863,
                        "name": "FunctionCall",
                        "src": "9535:63:2"
                      }
                    ],
                    "id": 864,
                    "name": "ExpressionStatement",
                    "src": "9535:63:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        866
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "to",
                          "scope": 889,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address payable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "payable",
                              "type": "address payable"
                            },
                            "id": 865,
                            "name": "ElementaryTypeName",
                            "src": "9608:15:2"
                          }
                        ],
                        "id": 866,
                        "name": "VariableDeclaration",
                        "src": "9608:18:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "customerAddress",
                          "referencedDeclaration": 155,
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct SmallBusiness.customer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 217,
                                  "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                  "value": "customers"
                                },
                                "id": 867,
                                "name": "Identifier",
                                "src": "9629:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 868,
                                    "name": "Identifier",
                                    "src": "9639:3:2"
                                  }
                                ],
                                "id": 869,
                                "name": "MemberAccess",
                                "src": "9639:10:2"
                              }
                            ],
                            "id": 870,
                            "name": "IndexAccess",
                            "src": "9629:21:2"
                          }
                        ],
                        "id": 871,
                        "name": "MemberAccess",
                        "src": "9629:37:2"
                      }
                    ],
                    "id": 872,
                    "name": "VariableDeclarationStatement",
                    "src": "9608:58:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        874
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "value",
                          "scope": 889,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 873,
                            "name": "ElementaryTypeName",
                            "src": "9678:4:2"
                          }
                        ],
                        "id": 874,
                        "name": "VariableDeclaration",
                        "src": "9678:10:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "balance",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmallBusiness_$903",
                                      "typeString": "contract SmallBusiness"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 875,
                                    "name": "ElementaryTypeName",
                                    "src": "9691:7:2"
                                  }
                                ],
                                "id": 876,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9691:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmallBusiness",
                                  "value": "this"
                                },
                                "id": 877,
                                "name": "Identifier",
                                "src": "9699:4:2"
                              }
                            ],
                            "id": 878,
                            "name": "FunctionCall",
                            "src": "9691:13:2"
                          }
                        ],
                        "id": 879,
                        "name": "MemberAccess",
                        "src": "9691:21:2"
                      }
                    ],
                    "id": 880,
                    "name": "VariableDeclarationStatement",
                    "src": "9678:34:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 866,
                                  "type": "address payable",
                                  "value": "to"
                                },
                                "id": 881,
                                "name": "Identifier",
                                "src": "9722:2:2"
                              }
                            ],
                            "id": 883,
                            "name": "MemberAccess",
                            "src": "9722:11:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 874,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 884,
                            "name": "Identifier",
                            "src": "9734:5:2"
                          }
                        ],
                        "id": 885,
                        "name": "FunctionCall",
                        "src": "9722:18:2"
                      }
                    ],
                    "id": 886,
                    "name": "ExpressionStatement",
                    "src": "9722:18:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 848
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7468652076616c75652069732072657475726e",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"the value is return\"",
                          "value": "the value is return"
                        },
                        "id": 887,
                        "name": "Literal",
                        "src": "9757:21:2"
                      }
                    ],
                    "id": 888,
                    "name": "Return",
                    "src": "9750:28:2"
                  }
                ],
                "id": 889,
                "name": "Block",
                "src": "9475:310:2"
              }
            ],
            "id": 890,
            "name": "FunctionDefinition",
            "src": "9421:364:2"
          },
          {
            "attributes": {
              "functionSelector": "12065fe0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getBalance",
              "scope": 903,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 891,
                "name": "ParameterList",
                "src": "9810:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 902,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 892,
                        "name": "ElementaryTypeName",
                        "src": "9835:4:2"
                      }
                    ],
                    "id": 893,
                    "name": "VariableDeclaration",
                    "src": "9835:4:2"
                  }
                ],
                "id": 894,
                "name": "ParameterList",
                "src": "9834:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 894
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "balance",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmallBusiness_$903",
                                      "typeString": "contract SmallBusiness"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 895,
                                    "name": "ElementaryTypeName",
                                    "src": "9857:7:2"
                                  }
                                ],
                                "id": 896,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9857:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmallBusiness",
                                  "value": "this"
                                },
                                "id": 897,
                                "name": "Identifier",
                                "src": "9865:4:2"
                              }
                            ],
                            "id": 898,
                            "name": "FunctionCall",
                            "src": "9857:13:2"
                          }
                        ],
                        "id": 899,
                        "name": "MemberAccess",
                        "src": "9857:21:2"
                      }
                    ],
                    "id": 900,
                    "name": "Return",
                    "src": "9850:28:2"
                  }
                ],
                "id": 901,
                "name": "Block",
                "src": "9840:45:2"
              }
            ],
            "id": 902,
            "name": "FunctionDefinition",
            "src": "9791:94:2"
          }
        ],
        "id": 903,
        "name": "ContractDefinition",
        "src": "737:9152:2"
      }
    ],
    "id": 904,
    "name": "SourceUnit",
    "src": "33:9856:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xc90a5997158125d11f471581d0f9c698a86d5f9b21d81eccee8f78d4d37327c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_customerAddress",
              "type": "address"
            }
          ],
          "name": "PostProject",
          "type": "event"
        },
        "0x140ba8a8a70ea6896f415e662fe4a3493133537db4dcd56586070e42253d9b43": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_customerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "chooseTheProject",
          "type": "event"
        },
        "0x67db2594560e9767e8eec7f82a7ee7777909a9c55f1dc6ba490d7ef45ffcecfd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "logAddCustomer",
          "type": "event"
        },
        "0x9cd3b8c22eaf60823d8598cfb11eba80932bdb7e58442e690e6368677ac81593": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "logAddEngineers",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3545a3dEC51D128E444E25b7639b6D068EbD818c",
      "transactionHash": "0x9bc8aca37db15f15e249469375d78e7f88ffc004658f53a8aa0f9e727a46be2e"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2022-01-11T16:22:33.126Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "PostProject(address)": {
        "params": {
          "_customerAddress": "is the address of Project"
        }
      },
      "chooseTheProject(address,uint256)": {
        "params": {
          "_customerAddress": "is the address of Project",
          "price": "is the price that customer send to Engineer"
        }
      },
      "logAddCustomer(address)": {
        "params": {
          "_address": "Engineer address"
        }
      },
      "logAddEngineers(address)": {
        "params": {
          "_address": "customer address"
        }
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "PostProject(address)": {
        "notice": "Emitted when a Project is posted "
      },
      "chooseTheProject(address,uint256)": {
        "notice": "Emitted when Engineer add a price for working on project "
      },
      "logAddCustomer(address)": {
        "notice": "Emitted when a Engineer is registred "
      },
      "logAddEngineers(address)": {
        "notice": "Emitted when a customer is registred "
      }
    },
    "kind": "user",
    "methods": {
      "accepteCustomer(address)": {
        "notice": "Allows a customer for view the price of the project that engineer add it and payed that price."
      },
      "addCustomer(address,string)": {
        "notice": "Allows to add a new customer in the network."
      },
      "addEngineer(address,string)": {
        "notice": "Allows to add a new engineer in the network."
      },
      "addProject(string,string,string,uint256,uint256)": {
        "notice": "add Project`s id in to mapping check the state of project should be forSell check the modifier is customer to call that function  the customer should call that function"
      },
      "deleteProject(address)": {
        "notice": "Allows the customer for delete the project"
      },
      "getProject(address)": {
        "notice": "Allows a Engineer and customer and users for view the project."
      }
    },
    "version": 1
  }
}